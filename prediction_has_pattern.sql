-- MySQL dump 10.13  Distrib 5.7.12, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: engine_has_pattern
-- ------------------------------------------------------
-- Server version	5.7.16-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `engine_has_pattern`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `engine_has_pattern` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `engine_has_pattern`;

--
-- Table structure for table `backtest_has_confidence`
--

DROP TABLE IF EXISTS `backtest_has_confidence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `backtest_has_confidence` (
  `has_id` int(11) NOT NULL,
  `confidence_value` float DEFAULT NULL,
  PRIMARY KEY (`has_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `backtest_has_confidence`
--

LOCK TABLES `backtest_has_confidence` WRITE;
/*!40000 ALTER TABLE `backtest_has_confidence` DISABLE KEYS */;
INSERT INTO `backtest_has_confidence` VALUES (133,105.042),(134,85.1852);
/*!40000 ALTER TABLE `backtest_has_confidence` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `equity_data_has_pattern`
--

DROP TABLE IF EXISTS `equity_data_has_pattern`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equity_data_has_pattern` (
  `ROW_ID` int(5) NOT NULL AUTO_INCREMENT,
  `SYMBOL` varchar(45) NOT NULL,
  `CURR_DATE` date NOT NULL,
  `PREV_CLOSE` float(10,2) DEFAULT NULL,
  `OPEN_PRICE` float(10,2) DEFAULT NULL,
  `HIGH_PRICE` float(10,2) DEFAULT NULL,
  `LOW_PRICE` float(10,2) DEFAULT NULL,
  `LAST_PRICE` float(10,2) DEFAULT NULL,
  `CLOSE_PRICE` float(10,2) DEFAULT NULL,
  `AVERAGE_PRICE` float(10,2) DEFAULT NULL,
  `TOTAL_TRADED_QUANTITY` float(20,2) DEFAULT NULL,
  `TURNOVER` float(20,2) DEFAULT NULL,
  `NO_OF_TRADES` int(11) DEFAULT NULL,
  `DELIVERABLE_QTY` int(11) DEFAULT NULL,
  `PERCENT_DELIVERABLE_QTY` float(10,2) DEFAULT NULL,
  PRIMARY KEY (`ROW_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=128 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `equity_data_has_pattern`
--

LOCK TABLES `equity_data_has_pattern` WRITE;
/*!40000 ALTER TABLE `equity_data_has_pattern` DISABLE KEYS */;
INSERT INTO `equity_data_has_pattern` VALUES (1,'YESBANK','2016-12-23',1126.15,1126.00,1139.95,1122.80,1124.80,1124.70,1129.88,1623067.00,1833868928.00,53439,326227,20.10),(2,'YESBANK','2016-12-26',1124.70,1119.90,1121.00,1090.55,1101.20,1101.50,1099.55,2098213.00,2307089920.00,54505,692453,33.00),(3,'YESBANK','2016-12-27',1101.50,1101.70,1133.10,1099.50,1128.70,1128.00,1112.63,1608751.00,1789937536.00,53533,474810,29.51),(4,'YESBANK','2016-12-28',1128.00,1128.90,1139.00,1110.50,1112.00,1113.05,1127.36,1822631.00,2054765952.00,72950,554196,30.41),(5,'YESBANK','2016-12-29',1113.05,1110.00,1153.70,1105.10,1150.30,1148.30,1131.25,2828669.00,3199931648.00,71592,812373,28.72),(6,'YESBANK','2016-12-30',1148.30,1147.70,1161.25,1145.00,1155.00,1156.45,1155.21,1643172.00,1898208896.00,53899,570737,34.73),(7,'YESBANK','2017-01-02',1156.45,1160.60,1162.00,1131.30,1144.00,1144.65,1143.84,1568032.00,1793577216.00,44387,246052,15.69),(8,'YESBANK','2017-01-03',1144.65,1145.00,1172.70,1140.45,1166.00,1162.90,1162.62,1750236.00,2034855808.00,55715,365403,20.88),(9,'YESBANK','2017-01-04',1162.90,1166.00,1171.90,1158.30,1162.20,1163.15,1165.12,1228400.00,1431228288.00,44449,311015,25.32),(10,'YESBANK','2017-01-05',1163.15,1170.10,1219.40,1168.40,1209.45,1210.20,1200.95,3710625.00,4456268288.00,110032,1383683,37.29),(11,'YESBANK','2017-01-06',1210.20,1215.00,1251.90,1215.00,1249.50,1246.75,1241.14,3745181.00,4648293888.00,87667,1099378,29.35),(12,'YESBANK','2017-01-09',1246.75,1254.80,1267.75,1247.30,1256.00,1256.20,1257.79,2438226.00,3066768128.00,65279,803432,32.95),(13,'YESBANK','2017-01-10',1256.20,1259.00,1274.00,1251.55,1270.50,1264.60,1260.51,1524946.00,1922208512.00,50540,558423,36.62),(14,'YESBANK','2017-01-11',1264.60,1274.00,1322.65,1273.05,1315.00,1317.85,1305.37,4139845.00,5404025344.00,108436,1513769,36.57),(15,'YESBANK','2017-01-12',1317.85,1319.00,1343.50,1318.00,1326.00,1325.50,1328.99,3005536.00,3994340864.00,72983,793285,26.39),(16,'YESBANK','2017-01-13',1325.50,1328.70,1333.95,1307.00,1318.80,1318.05,1316.59,1734372.00,2283456256.00,60097,473901,27.32),(17,'YESBANK','2017-01-16',1318.05,1318.50,1335.70,1311.40,1330.00,1328.75,1327.80,1704726.00,2263538176.00,42077,393777,23.10),(18,'YESBANK','2017-01-17',1328.75,1336.30,1336.30,1315.00,1327.95,1323.80,1324.25,1396368.00,1849135360.00,36379,360406,25.81),(19,'YESBANK','2017-01-18',1323.80,1328.80,1351.25,1328.00,1347.15,1345.95,1342.20,2070577.00,2779130624.00,65705,520234,25.13),(20,'YESBANK','2017-01-19',1345.95,1344.95,1356.50,1332.35,1347.45,1347.50,1344.30,5059527.00,6801519616.00,132236,756526,14.95),(21,'YESBANK','2017-01-20',1347.50,1354.00,1378.70,1352.15,1360.95,1358.70,1366.75,4400226.00,6014002176.00,103131,1156304,26.28),(22,'YESBANK','2017-01-23',1358.70,1360.95,1389.00,1358.55,1385.25,1382.95,1376.85,3107501.00,4278547968.00,85336,1027880,33.08),(23,'YESBANK','2017-01-24',1382.95,1391.95,1413.20,1346.50,1363.85,1358.90,1377.00,6128162.00,8438472192.00,179554,2407713,39.29),(24,'YESBANK','2017-01-25',1358.90,1372.00,1410.00,1367.20,1408.85,1406.80,1392.12,4665975.00,6495598592.00,128393,1938798,41.55),(25,'YESBANK','2017-01-27',1406.80,1410.00,1421.50,1390.20,1396.10,1398.75,1402.29,2784101.00,3904128000.00,116043,942595,33.86),(26,'YESBANK','2017-01-30',1398.75,1399.95,1400.45,1383.90,1388.80,1389.00,1391.36,1567858.00,2181454336.00,44539,557819,35.58),(27,'YESBANK','2017-01-31',1389.00,1388.00,1400.00,1381.05,1397.00,1396.00,1391.71,2315785.00,3222909440.00,63298,1007124,43.49),(28,'YESBANK','2017-02-01',1396.00,1403.00,1416.40,1382.20,1413.90,1413.10,1399.92,3491880.00,4888363520.00,86523,1501896,43.01),(29,'YESBANK','2017-02-02',1413.10,1419.00,1419.00,1383.00,1385.60,1387.00,1395.50,1883394.00,2628268544.00,61657,798146,42.38),(30,'YESBANK','2017-02-03',1387.00,1387.65,1402.30,1385.25,1400.80,1397.80,1394.33,1616895.00,2254488576.00,51667,596994,36.92),(31,'YESBANK','2017-02-06',1397.80,1410.00,1410.75,1393.00,1397.20,1398.45,1398.46,1321611.00,1848223744.00,40159,453008,34.28),(32,'YESBANK','2017-02-07',1398.45,1396.00,1405.00,1387.40,1398.05,1396.80,1395.88,1480096.00,2066030336.00,42906,404271,27.31),(33,'YESBANK','2017-02-08',1396.80,1400.00,1423.25,1377.55,1416.00,1410.25,1399.92,1812188.00,2536925184.00,50536,584788,32.27),(34,'YESBANK','2017-02-09',1410.25,1415.00,1419.60,1395.10,1405.65,1408.20,1406.63,1704231.00,2397225216.00,47287,505734,29.68),(35,'YESBANK','2017-02-10',1408.20,1412.00,1416.45,1402.00,1412.10,1412.85,1409.63,1559680.00,2198567424.00,67887,641931,41.16),(36,'YESBANK','2017-02-13',1412.85,1416.00,1457.30,1410.00,1457.00,1452.85,1435.68,3758757.00,5396362752.00,81369,1503542,40.00),(37,'YESBANK','2017-02-14',1452.85,1456.70,1471.80,1441.20,1453.50,1457.15,1460.28,3077798.00,4494444032.00,86760,1032199,33.54),(38,'YESBANK','2017-02-15',1457.15,1457.70,1460.40,1418.85,1432.50,1430.95,1436.32,2253289.00,3236446720.00,59119,835053,37.06),(39,'YESBANK','2017-02-16',1430.95,1432.50,1446.00,1426.00,1438.60,1436.95,1435.68,1678461.00,2409737728.00,45621,524396,31.24),(40,'YESBANK','2017-02-17',1436.95,1445.00,1458.70,1435.25,1437.05,1440.90,1447.15,1786438.00,2585236992.00,54011,614706,34.41),(41,'YESBANK','2017-02-20',1440.90,1440.00,1440.05,1423.40,1430.00,1429.25,1430.81,1315842.00,1882722304.00,38735,493742,37.52),(42,'YESBANK','2017-02-21',1429.25,1434.00,1453.80,1431.05,1447.00,1449.75,1446.95,1338414.00,1936622208.00,43361,455776,34.05),(43,'YESBANK','2017-02-22',1449.75,1452.50,1458.55,1441.20,1445.00,1446.95,1449.90,1160280.00,1682285440.00,68065,432925,37.31),(44,'YESBANK','2017-02-23',1446.95,1450.00,1455.00,1441.40,1445.00,1446.75,1448.43,1274419.00,1845912320.00,35987,581635,45.64),(45,'YESBANK','2017-02-27',1446.75,1441.65,1445.25,1417.25,1420.30,1421.90,1430.38,1287815.00,1842066304.00,49159,562355,43.67),(46,'YESBANK','2017-02-28',1421.90,1427.00,1459.50,1423.00,1452.10,1452.70,1443.70,1616365.00,2333544960.00,51039,445841,27.58),(47,'YESBANK','2017-03-01',1452.70,1459.70,1466.50,1443.05,1453.20,1454.65,1454.74,1172703.00,1705975296.00,36632,307638,26.23),(48,'YESBANK','2017-03-02',1454.65,1460.00,1460.20,1419.15,1424.00,1424.70,1437.18,1503866.00,2161328128.00,70075,616856,41.02),(49,'YESBANK','2017-03-03',1424.70,1422.80,1441.95,1420.10,1433.10,1433.75,1432.15,1264822.00,1811417600.00,58981,527832,41.73),(50,'YESBANK','2017-03-06',1433.75,1445.05,1464.80,1437.20,1460.00,1461.50,1452.76,1299063.00,1887229184.00,41612,427981,32.95),(51,'YESBANK','2017-03-07',1461.50,1465.00,1465.00,1439.10,1449.95,1448.20,1445.87,1489101.00,2153040896.00,53644,785578,52.76),(52,'YESBANK','2017-03-08',1448.20,1450.00,1481.60,1448.00,1480.00,1474.45,1467.23,2696370.00,3956198912.00,91757,775932,28.78),(53,'YESBANK','2017-03-09',1474.45,1477.00,1478.80,1462.00,1464.90,1465.25,1468.81,1095808.00,1609535488.00,39051,348014,31.76),(54,'YESBANK','2017-03-10',1465.25,1470.00,1484.45,1465.10,1481.75,1481.35,1475.61,1669177.00,2463059712.00,65236,895121,53.63),(55,'YESBANK','2017-03-14',1481.35,1522.70,1539.00,1514.25,1523.00,1531.75,1528.40,3349154.00,5118851072.00,88642,1709640,51.05),(56,'YESBANK','2017-03-15',1531.75,1526.50,1536.00,1519.70,1526.10,1529.05,1528.99,1625837.00,2485892096.00,51992,928166,57.09),(57,'YESBANK','2017-03-16',1529.05,1540.00,1545.45,1518.50,1528.85,1527.95,1534.59,2039731.00,3130151424.00,54715,1126691,55.24),(58,'YESBANK','2017-03-17',1527.95,1540.00,1540.00,1503.50,1508.75,1507.90,1511.59,3499147.00,5289285120.00,72258,2598355,74.26),(59,'YESBANK','2017-03-20',1507.90,1518.75,1524.00,1507.10,1518.20,1515.75,1515.07,1216370.00,1842881536.00,30779,529483,43.53),(60,'YESBANK','2017-03-21',1515.75,1522.00,1522.15,1468.65,1490.55,1484.75,1488.84,2433767.00,3623484672.00,55479,1110537,45.63),(61,'YESBANK','2017-03-22',1484.75,1475.00,1477.00,1460.15,1465.05,1470.85,1468.31,2000408.00,2937225984.00,73022,1008911,50.44),(62,'YESBANK','2017-03-23',1470.85,1474.00,1521.50,1462.00,1518.90,1518.60,1498.06,4149670.00,6216474624.00,96415,937021,22.58),(63,'YESBANK','2017-03-24',1518.60,1539.00,1544.75,1524.55,1529.00,1529.05,1532.80,3365987.00,5159370240.00,97058,1422697,42.27),(64,'YESBANK','2017-03-27',1529.05,1529.05,1542.00,1520.00,1528.45,1527.95,1530.14,1588890.00,2431225344.00,52534,549540,34.59),(65,'YESBANK','2017-03-28',1527.95,1534.30,1539.50,1526.00,1534.95,1534.85,1532.62,1667340.00,2555393536.00,52378,996036,59.74),(66,'YESBANK','2017-03-29',1534.85,1536.50,1555.00,1527.05,1544.00,1544.95,1541.28,1560107.00,2404566784.00,55478,752934,48.26),(67,'YESBANK','2017-03-30',1544.95,1540.00,1557.50,1538.65,1555.55,1552.15,1549.74,1897441.00,2940548608.00,32200,1285125,67.73),(68,'YESBANK','2017-03-31',1552.15,1554.00,1555.00,1534.00,1545.80,1546.75,1541.79,1633231.00,2518095616.00,63450,846292,51.82),(69,'YESBANK','2017-04-03',1546.75,1548.20,1556.10,1535.00,1538.50,1538.85,1543.33,867844.00,1339367168.00,26980,307288,35.41),(70,'YESBANK','2017-04-05',1538.85,1555.00,1570.00,1536.30,1566.50,1567.50,1554.37,1956718.00,3041460224.00,98501,901805,46.09),(71,'YESBANK','2017-04-06',1567.50,1567.70,1575.35,1555.75,1561.20,1564.75,1564.59,3274986.00,5123997184.00,78573,2324340,70.97),(72,'YESBANK','2017-04-07',1564.75,1556.10,1575.90,1549.60,1556.20,1556.55,1562.43,1552648.00,2425902592.00,48313,714609,46.03),(73,'YESBANK','2017-04-10',1556.55,1562.00,1605.00,1559.10,1603.00,1599.60,1585.79,2377664.00,3770473216.00,87039,889098,37.39),(74,'YESBANK','2017-04-11',1599.60,1603.00,1623.50,1595.40,1610.00,1614.75,1614.10,2619242.00,4227716864.00,83889,1201698,45.88),(75,'YESBANK','2017-04-12',1614.75,1617.00,1635.00,1603.45,1634.00,1631.45,1623.79,1883962.00,3059164672.00,62766,601943,31.95),(76,'YESBANK','2017-04-13',1631.45,1626.00,1637.95,1613.10,1618.10,1616.40,1624.10,1192733.00,1937112960.00,51148,370909,31.10),(77,'YESBANK','2017-04-17',1616.40,1618.60,1625.90,1602.30,1609.60,1610.60,1611.62,1102492.00,1776803072.00,47897,440296,39.94),(78,'YESBANK','2017-04-18',1610.60,1614.00,1627.95,1597.95,1609.05,1605.90,1615.47,1039352.00,1679045248.00,70121,398691,38.36),(79,'YESBANK','2017-04-19',1605.90,1600.30,1619.00,1592.25,1609.00,1605.45,1605.87,3296099.00,5293099008.00,114355,1224685,37.16),(80,'YESBANK','2017-04-20',1605.45,1520.60,1574.95,1520.60,1545.50,1545.15,1548.66,7873162.00,12192829440.00,177916,3187360,40.48),(81,'YESBANK','2017-04-21',1545.15,1557.00,1562.80,1524.00,1543.00,1544.15,1546.64,3076330.00,4757981696.00,85333,1442940,46.90),(82,'YESBANK','2017-04-24',1544.15,1549.00,1573.15,1543.20,1555.50,1554.30,1557.21,1851812.00,2883657472.00,74727,745776,40.27),(83,'YESBANK','2017-04-25',1554.30,1560.00,1567.00,1553.00,1556.25,1556.95,1558.73,1315207.00,2050046080.00,58266,684509,52.05),(84,'YESBANK','2017-04-26',1556.95,1560.00,1586.90,1557.75,1581.65,1582.05,1575.17,1971652.00,3105690112.00,72816,836724,42.44),(85,'YESBANK','2017-04-27',1582.05,1585.00,1651.90,1573.95,1638.75,1642.40,1622.47,4221491.00,6849254400.00,108381,1501211,35.56),(86,'YESBANK','2017-04-28',1642.40,1639.55,1644.65,1621.80,1635.90,1630.25,1630.70,1335961.00,2178556160.00,51091,570614,42.71),(87,'YESBANK','2017-05-02',1630.25,1632.00,1651.80,1623.55,1630.00,1633.90,1638.77,1645639.00,2696830464.00,78354,778036,47.28),(88,'YESBANK','2017-05-03',1633.90,1637.70,1641.45,1615.60,1630.00,1632.95,1627.39,981337.00,1597014912.00,39561,291818,29.74),(89,'YESBANK','2017-05-04',1632.95,1632.55,1640.00,1620.10,1628.00,1626.85,1629.03,1011962.00,1648516096.00,47427,357936,35.37),(90,'YESBANK','2017-05-05',1626.85,1626.00,1631.00,1604.35,1611.50,1608.75,1613.26,977720.00,1577315456.00,41585,337929,34.56),(91,'YESBANK','2017-05-08',1608.75,1614.00,1634.00,1609.05,1616.25,1615.45,1622.36,842580.00,1366968832.00,40394,346612,41.14),(92,'YESBANK','2017-05-09',1615.45,1616.05,1616.60,1592.15,1608.00,1602.50,1601.85,977933.00,1566505088.00,34652,408255,41.75),(93,'YESBANK','2017-05-10',1602.50,1606.00,1614.95,1584.10,1599.00,1598.40,1597.92,1950437.00,3116648960.00,47607,1075706,55.15),(94,'YESBANK','2017-05-11',1598.40,1608.00,1608.00,1575.00,1578.50,1577.30,1589.52,1669314.00,2653404672.00,85870,1009440,60.47),(95,'YESBANK','2017-05-12',1577.30,1581.00,1591.80,1469.25,1491.00,1483.10,1515.48,10279727.00,15578682368.00,245186,3689593,35.89),(96,'YESBANK','2017-05-15',1483.10,1496.90,1506.00,1453.55,1474.00,1472.05,1476.98,6077544.00,8976422912.00,183074,2228727,36.67),(97,'YESBANK','2017-05-16',1472.05,1476.50,1500.00,1468.10,1477.10,1483.40,1481.94,2779811.00,4119511552.00,109156,1332784,47.95),(98,'YESBANK','2017-05-17',1483.40,1483.95,1483.95,1451.05,1455.40,1454.65,1461.33,3409548.00,4982471168.00,126671,1766473,51.81),(99,'YESBANK','2017-05-18',1454.65,1438.00,1443.90,1393.00,1397.55,1401.15,1418.63,4999486.00,7092410368.00,158467,2739845,54.80),(100,'YESBANK','2017-05-19',1401.15,1412.75,1455.00,1405.25,1430.35,1430.10,1432.12,5976947.00,8559734784.00,146621,2961130,49.54),(101,'YESBANK','2017-05-22',1430.10,1443.80,1450.55,1398.00,1409.70,1405.80,1418.12,2527715.00,3584605952.00,72112,1075214,42.54);
/*!40000 ALTER TABLE `equity_data_has_pattern` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `equity_data_has_pattern_rally_top`
--

DROP TABLE IF EXISTS `equity_data_has_pattern_rally_top`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equity_data_has_pattern_rally_top` (
  `ROW_ID` int(5) NOT NULL AUTO_INCREMENT,
  `SYMBOL` varchar(45) NOT NULL,
  `CURR_DATE` date NOT NULL,
  `PREV_CLOSE` float(10,2) DEFAULT NULL,
  `OPEN_PRICE` float(10,2) DEFAULT NULL,
  `HIGH_PRICE` float(10,2) DEFAULT NULL,
  `LOW_PRICE` float(10,2) DEFAULT NULL,
  `LAST_PRICE` float(10,2) DEFAULT NULL,
  `CLOSE_PRICE` float(10,2) DEFAULT NULL,
  `AVERAGE_PRICE` float(10,2) DEFAULT NULL,
  `TOTAL_TRADED_QUANTITY` float(20,2) DEFAULT NULL,
  `TURNOVER` float(20,2) DEFAULT NULL,
  `NO_OF_TRADES` int(11) DEFAULT NULL,
  `DELIVERABLE_QTY` int(11) DEFAULT NULL,
  `PERCENT_DELIVERABLE_QTY` float(10,2) DEFAULT NULL,
  PRIMARY KEY (`ROW_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=368 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `equity_data_has_pattern_rally_top`
--

LOCK TABLES `equity_data_has_pattern_rally_top` WRITE;
/*!40000 ALTER TABLE `equity_data_has_pattern_rally_top` DISABLE KEYS */;
INSERT INTO `equity_data_has_pattern_rally_top` VALUES (28,'YESBANK','2017-02-01',1396.00,1403.00,1416.40,1382.20,1413.90,1413.10,1399.92,3491880.00,4888363520.00,86523,1501896,43.01),(37,'YESBANK','2017-02-14',1452.85,1456.70,1471.80,1441.20,1453.50,1457.15,1460.28,3077798.00,4494444032.00,86760,1032199,33.54),(55,'YESBANK','2017-03-14',1481.35,1522.70,1539.00,1514.25,1523.00,1531.75,1528.40,3349154.00,5118851072.00,88642,1709640,51.05),(75,'YESBANK','2017-04-12',1614.75,1617.00,1635.00,1603.45,1634.00,1631.45,1623.79,1883962.00,3059164672.00,62766,601943,31.95),(85,'YESBANK','2017-04-27',1582.05,1585.00,1651.90,1573.95,1638.75,1642.40,1622.47,4221491.00,6849254400.00,108381,1501211,35.56);
/*!40000 ALTER TABLE `equity_data_has_pattern_rally_top` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `equity_data_has_pattern_top_temp`
--

DROP TABLE IF EXISTS `equity_data_has_pattern_top_temp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equity_data_has_pattern_top_temp` (
  `ROW_ID` int(5) NOT NULL AUTO_INCREMENT,
  `SYMBOL` varchar(45) NOT NULL,
  `CURR_DATE` date NOT NULL,
  `PREV_CLOSE` float(10,2) DEFAULT NULL,
  `OPEN_PRICE` float(10,2) DEFAULT NULL,
  `HIGH_PRICE` float(10,2) DEFAULT NULL,
  `LOW_PRICE` float(10,2) DEFAULT NULL,
  `LAST_PRICE` float(10,2) DEFAULT NULL,
  `CLOSE_PRICE` float(10,2) DEFAULT NULL,
  `AVERAGE_PRICE` float(10,2) DEFAULT NULL,
  `TOTAL_TRADED_QUANTITY` float(20,2) DEFAULT NULL,
  `TURNOVER` float(20,2) DEFAULT NULL,
  `NO_OF_TRADES` int(11) DEFAULT NULL,
  `DELIVERABLE_QTY` int(11) DEFAULT NULL,
  `PERCENT_DELIVERABLE_QTY` float(10,2) DEFAULT NULL,
  PRIMARY KEY (`ROW_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=368 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `equity_data_has_pattern_top_temp`
--

LOCK TABLES `equity_data_has_pattern_top_temp` WRITE;
/*!40000 ALTER TABLE `equity_data_has_pattern_top_temp` DISABLE KEYS */;
INSERT INTO `equity_data_has_pattern_top_temp` VALUES (3,'YESBANK','2016-12-27',1101.50,1101.70,1133.10,1099.50,1128.70,1128.00,1112.63,1608751.00,1789937536.00,53533,474810,29.51),(5,'YESBANK','2016-12-29',1113.05,1110.00,1153.70,1105.10,1150.30,1148.30,1131.25,2828669.00,3199931648.00,71592,812373,28.72),(6,'YESBANK','2016-12-30',1148.30,1147.70,1161.25,1145.00,1155.00,1156.45,1155.21,1643172.00,1898208896.00,53899,570737,34.73),(8,'YESBANK','2017-01-03',1144.65,1145.00,1172.70,1140.45,1166.00,1162.90,1162.62,1750236.00,2034855808.00,55715,365403,20.88),(9,'YESBANK','2017-01-04',1162.90,1166.00,1171.90,1158.30,1162.20,1163.15,1165.12,1228400.00,1431228288.00,44449,311015,25.32),(10,'YESBANK','2017-01-05',1163.15,1170.10,1219.40,1168.40,1209.45,1210.20,1200.95,3710625.00,4456268288.00,110032,1383683,37.29),(11,'YESBANK','2017-01-06',1210.20,1215.00,1251.90,1215.00,1249.50,1246.75,1241.14,3745181.00,4648293888.00,87667,1099378,29.35),(12,'YESBANK','2017-01-09',1246.75,1254.80,1267.75,1247.30,1256.00,1256.20,1257.79,2438226.00,3066768128.00,65279,803432,32.95),(13,'YESBANK','2017-01-10',1256.20,1259.00,1274.00,1251.55,1270.50,1264.60,1260.51,1524946.00,1922208512.00,50540,558423,36.62),(14,'YESBANK','2017-01-11',1264.60,1274.00,1322.65,1273.05,1315.00,1317.85,1305.37,4139845.00,5404025344.00,108436,1513769,36.57),(15,'YESBANK','2017-01-12',1317.85,1319.00,1343.50,1318.00,1326.00,1325.50,1328.99,3005536.00,3994340864.00,72983,793285,26.39),(17,'YESBANK','2017-01-16',1318.05,1318.50,1335.70,1311.40,1330.00,1328.75,1327.80,1704726.00,2263538176.00,42077,393777,23.10),(19,'YESBANK','2017-01-18',1323.80,1328.80,1351.25,1328.00,1347.15,1345.95,1342.20,2070577.00,2779130624.00,65705,520234,25.13),(20,'YESBANK','2017-01-19',1345.95,1344.95,1356.50,1332.35,1347.45,1347.50,1344.30,5059527.00,6801519616.00,132236,756526,14.95),(21,'YESBANK','2017-01-20',1347.50,1354.00,1378.70,1352.15,1360.95,1358.70,1366.75,4400226.00,6014002176.00,103131,1156304,26.28),(22,'YESBANK','2017-01-23',1358.70,1360.95,1389.00,1358.55,1385.25,1382.95,1376.85,3107501.00,4278547968.00,85336,1027880,33.08),(24,'YESBANK','2017-01-25',1358.90,1372.00,1410.00,1367.20,1408.85,1406.80,1392.12,4665975.00,6495598592.00,128393,1938798,41.55),(28,'YESBANK','2017-02-01',1396.00,1403.00,1416.40,1382.20,1413.90,1413.10,1399.92,3491880.00,4888363520.00,86523,1501896,43.01),(36,'YESBANK','2017-02-13',1412.85,1416.00,1457.30,1410.00,1457.00,1452.85,1435.68,3758757.00,5396362752.00,81369,1503542,40.00),(37,'YESBANK','2017-02-14',1452.85,1456.70,1471.80,1441.20,1453.50,1457.15,1460.28,3077798.00,4494444032.00,86760,1032199,33.54),(50,'YESBANK','2017-03-06',1433.75,1445.05,1464.80,1437.20,1460.00,1461.50,1452.76,1299063.00,1887229184.00,41612,427981,32.95),(52,'YESBANK','2017-03-08',1448.20,1450.00,1481.60,1448.00,1480.00,1474.45,1467.23,2696370.00,3956198912.00,91757,775932,28.78),(54,'YESBANK','2017-03-10',1465.25,1470.00,1484.45,1465.10,1481.75,1481.35,1475.61,1669177.00,2463059712.00,65236,895121,53.63),(55,'YESBANK','2017-03-14',1481.35,1522.70,1539.00,1514.25,1523.00,1531.75,1528.40,3349154.00,5118851072.00,88642,1709640,51.05),(65,'YESBANK','2017-03-28',1527.95,1534.30,1539.50,1526.00,1534.95,1534.85,1532.62,1667340.00,2555393536.00,52378,996036,59.74),(66,'YESBANK','2017-03-29',1534.85,1536.50,1555.00,1527.05,1544.00,1544.95,1541.28,1560107.00,2404566784.00,55478,752934,48.26),(67,'YESBANK','2017-03-30',1544.95,1540.00,1557.50,1538.65,1555.55,1552.15,1549.74,1897441.00,2940548608.00,32200,1285125,67.73),(70,'YESBANK','2017-04-05',1538.85,1555.00,1570.00,1536.30,1566.50,1567.50,1554.37,1956718.00,3041460224.00,98501,901805,46.09),(73,'YESBANK','2017-04-10',1556.55,1562.00,1605.00,1559.10,1603.00,1599.60,1585.79,2377664.00,3770473216.00,87039,889098,37.39),(74,'YESBANK','2017-04-11',1599.60,1603.00,1623.50,1595.40,1610.00,1614.75,1614.10,2619242.00,4227716864.00,83889,1201698,45.88),(75,'YESBANK','2017-04-12',1614.75,1617.00,1635.00,1603.45,1634.00,1631.45,1623.79,1883962.00,3059164672.00,62766,601943,31.95),(85,'YESBANK','2017-04-27',1582.05,1585.00,1651.90,1573.95,1638.75,1642.40,1622.47,4221491.00,6849254400.00,108381,1501211,35.56);
/*!40000 ALTER TABLE `equity_data_has_pattern_top_temp` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `equity_data_has_second_shoulder_top`
--

DROP TABLE IF EXISTS `equity_data_has_second_shoulder_top`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equity_data_has_second_shoulder_top` (
  `head_row_id` int(5) NOT NULL,
  `ROW_ID` int(5) NOT NULL,
  `SYMBOL` varchar(45) NOT NULL,
  `CURR_DATE` date NOT NULL,
  `PREV_CLOSE` float DEFAULT NULL,
  `OPEN_PRICE` float DEFAULT NULL,
  `HIGH_PRICE` float DEFAULT NULL,
  `LOW_PRICE` float DEFAULT NULL,
  `LAST_PRICE` float DEFAULT NULL,
  `CLOSE_PRICE` float DEFAULT NULL,
  `AVERAGE_PRICE` float DEFAULT NULL,
  `TOTAL_TRADED_QUANTITY` float DEFAULT NULL,
  `TURNOVER` float DEFAULT NULL,
  `NO_OF_TRADES` int(11) DEFAULT NULL,
  `DELIVERABLE_QTY` int(11) DEFAULT NULL,
  `PERCENT_DELIVERABLE_QTY` float DEFAULT NULL,
  PRIMARY KEY (`ROW_ID`,`head_row_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `equity_data_has_second_shoulder_top`
--

LOCK TABLES `equity_data_has_second_shoulder_top` WRITE;
/*!40000 ALTER TABLE `equity_data_has_second_shoulder_top` DISABLE KEYS */;
/*!40000 ALTER TABLE `equity_data_has_second_shoulder_top` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_event_log`
--

DROP TABLE IF EXISTS `has_event_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_event_log` (
  `has_event_log_id` int(11) NOT NULL AUTO_INCREMENT,
  `eval_run_id` int(11) DEFAULT NULL,
  `has_event_short_desc` varchar(45) DEFAULT NULL,
  `has_event_desc` varchar(200) NOT NULL,
  PRIMARY KEY (`has_event_log_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_event_log`
--

LOCK TABLES `has_event_log` WRITE;
/*!40000 ALTER TABLE `has_event_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `has_event_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_first_shoulder_data`
--

DROP TABLE IF EXISTS `has_first_shoulder_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_first_shoulder_data` (
  `first_shoulder_top_row_id` int(5) NOT NULL,
  `first_shoulder_top_date` date NOT NULL,
  `first_shoulder_top_close_price` float NOT NULL,
  `first_shoulder_low_row_id` int(5) DEFAULT NULL,
  `first_shoulder_low_date` date DEFAULT NULL,
  `first_shoulder_low_close_price` float DEFAULT NULL,
  `head_row_id` int(5) NOT NULL,
  `head_date` date NOT NULL,
  `head_close_price` float NOT NULL,
  `head_low_row_id` int(5) DEFAULT NULL,
  `head_low_date` date DEFAULT NULL,
  `head_low_close_price` float DEFAULT NULL,
  PRIMARY KEY (`first_shoulder_top_row_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_first_shoulder_data`
--

LOCK TABLES `has_first_shoulder_data` WRITE;
/*!40000 ALTER TABLE `has_first_shoulder_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `has_first_shoulder_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_neckline_points`
--

DROP TABLE IF EXISTS `has_neckline_points`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_neckline_points` (
  `has_id` int(11) NOT NULL,
  `row_id` int(11) NOT NULL,
  `curr_date` date DEFAULT NULL,
  `price_value` float(10,2) DEFAULT NULL,
  PRIMARY KEY (`has_id`,`row_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_neckline_points`
--

LOCK TABLES `has_neckline_points` WRITE;
/*!40000 ALTER TABLE `has_neckline_points` DISABLE KEYS */;
/*!40000 ALTER TABLE `has_neckline_points` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_pattern_rules`
--

DROP TABLE IF EXISTS `has_pattern_rules`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_pattern_rules` (
  `rule_id` int(11) NOT NULL,
  `rule_name` varchar(45) DEFAULT NULL,
  `rule_value` float NOT NULL,
  `rule_desc` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`rule_id`),
  UNIQUE KEY `rule_name_UNIQUE` (`rule_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_pattern_rules`
--

LOCK TABLES `has_pattern_rules` WRITE;
/*!40000 ALTER TABLE `has_pattern_rules` DISABLE KEYS */;
INSERT INTO `has_pattern_rules` VALUES (1,'HEAD_DURATION_PERCENTAGE_OF_RALLY',5,'TIME TAKEN TO MAKE LOW AFTER IDENTIFYING HEAD PEAK. ALSO SAME TIME IS USED TO VERIFY THAT THIS IS LOW POINT FROM FUTURE VALUES'),(2,'MAX_NECKLINE_SLOPE_ABSOLUTE_VALUE',0.3,'MAX VALUE FOR SLOPE OF NECKLINE IN ABSOLUTE TERMS');
/*!40000 ALTER TABLE `has_pattern_rules` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_pattern_type`
--

DROP TABLE IF EXISTS `has_pattern_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_pattern_type` (
  `type_id` int(11) NOT NULL,
  `type_name` varchar(45) DEFAULT NULL,
  `type_desc` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_pattern_type`
--

LOCK TABLES `has_pattern_type` WRITE;
/*!40000 ALTER TABLE `has_pattern_type` DISABLE KEYS */;
INSERT INTO `has_pattern_type` VALUES (1,'SHORT_CUT',NULL),(2,'FULL_LOW',NULL);
/*!40000 ALTER TABLE `has_pattern_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identified_has_data`
--

DROP TABLE IF EXISTS `identified_has_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identified_has_data` (
  `has_id` int(5) NOT NULL AUTO_INCREMENT,
  `symbol` varchar(45) NOT NULL,
  `first_shoulder_top_row_id` int(5) NOT NULL,
  `first_shoulder_top_date` date DEFAULT NULL,
  `first_shoulder_top_close_price` float DEFAULT NULL,
  `first_shoulder_low_row_id` int(5) DEFAULT NULL,
  `first_shoulder_low_date` date DEFAULT NULL,
  `first_shoulder_low_close_price` float DEFAULT NULL,
  `head_row_id` int(5) DEFAULT NULL,
  `head_date` date DEFAULT NULL,
  `head_close_price` float DEFAULT NULL,
  `head_low_row_id` int(5) DEFAULT NULL,
  `head_low_date` date DEFAULT NULL,
  `head_low_close_price` float DEFAULT NULL,
  `second_shoulder_top_row_id` int(5) DEFAULT NULL,
  `second_shoulder_top_date` date DEFAULT NULL,
  `second_shoulder_top_close_price` float DEFAULT NULL,
  `second_shoulder_low_row_id` int(5) DEFAULT NULL,
  `second_shoulder_low_date` date DEFAULT NULL,
  `second_shoulder_low_close_price` float DEFAULT NULL,
  PRIMARY KEY (`has_id`,`symbol`,`first_shoulder_top_row_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identified_has_data`
--

LOCK TABLES `identified_has_data` WRITE;
/*!40000 ALTER TABLE `identified_has_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `identified_has_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identified_has_neckline_data`
--

DROP TABLE IF EXISTS `identified_has_neckline_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identified_has_neckline_data` (
  `has_id` int(5) NOT NULL AUTO_INCREMENT,
  `first_shoulder_low_row_id` int(5) DEFAULT NULL,
  `first_shoulder_low_date` date DEFAULT NULL,
  `first_shoulder_low_close_price` float DEFAULT NULL,
  `neckline_slope_value` float DEFAULT NULL,
  PRIMARY KEY (`has_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identified_has_neckline_data`
--

LOCK TABLES `identified_has_neckline_data` WRITE;
/*!40000 ALTER TABLE `identified_has_neckline_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `identified_has_neckline_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identified_has_pattern_type`
--

DROP TABLE IF EXISTS `identified_has_pattern_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identified_has_pattern_type` (
  `has_id` int(11) NOT NULL,
  `identified_pattern_type_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`has_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identified_has_pattern_type`
--

LOCK TABLES `identified_has_pattern_type` WRITE;
/*!40000 ALTER TABLE `identified_has_pattern_type` DISABLE KEYS */;
INSERT INTO `identified_has_pattern_type` VALUES (135,2);
/*!40000 ALTER TABLE `identified_has_pattern_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `market_sessions`
--

DROP TABLE IF EXISTS `market_sessions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `market_sessions` (
  `row_id` int(5) NOT NULL,
  `session_date` date DEFAULT NULL,
  PRIMARY KEY (`row_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `market_sessions`
--

LOCK TABLES `market_sessions` WRITE;
/*!40000 ALTER TABLE `market_sessions` DISABLE KEYS */;
INSERT INTO `market_sessions` VALUES (1,'2016-12-23'),(2,'2016-12-26'),(3,'2016-12-27'),(4,'2016-12-28'),(5,'2016-12-29'),(6,'2016-12-30'),(7,'2017-01-02'),(8,'2017-01-03'),(9,'2017-01-04'),(10,'2017-01-05'),(11,'2017-01-06'),(12,'2017-01-09'),(13,'2017-01-10'),(14,'2017-01-11'),(15,'2017-01-12'),(16,'2017-01-13'),(17,'2017-01-16'),(18,'2017-01-17'),(19,'2017-01-18'),(20,'2017-01-19'),(21,'2017-01-20'),(22,'2017-01-23'),(23,'2017-01-24'),(24,'2017-01-25'),(25,'2017-01-27'),(26,'2017-01-30'),(27,'2017-01-31'),(28,'2017-02-01'),(29,'2017-02-02'),(30,'2017-02-03'),(31,'2017-02-06'),(32,'2017-02-07'),(33,'2017-02-08'),(34,'2017-02-09'),(35,'2017-02-10'),(36,'2017-02-13'),(37,'2017-02-14'),(38,'2017-02-15'),(39,'2017-02-16'),(40,'2017-02-17'),(41,'2017-02-20'),(42,'2017-02-21'),(43,'2017-02-22'),(44,'2017-02-23'),(45,'2017-02-27'),(46,'2017-02-28'),(47,'2017-03-01'),(48,'2017-03-02'),(49,'2017-03-03'),(50,'2017-03-06'),(51,'2017-03-07'),(52,'2017-03-08'),(53,'2017-03-09'),(54,'2017-03-10'),(55,'2017-03-14'),(56,'2017-03-15'),(57,'2017-03-16'),(58,'2017-03-17'),(59,'2017-03-20'),(60,'2017-03-21'),(61,'2017-03-22'),(62,'2017-03-23'),(63,'2017-03-24'),(64,'2017-03-27'),(65,'2017-03-28'),(66,'2017-03-29'),(67,'2017-03-30'),(68,'2017-03-31'),(69,'2017-04-03'),(70,'2017-04-05'),(71,'2017-04-06'),(72,'2017-04-07'),(73,'2017-04-10'),(74,'2017-04-11'),(75,'2017-04-12'),(76,'2017-04-13'),(77,'2017-04-17'),(78,'2017-04-18'),(79,'2017-04-19'),(80,'2017-04-20'),(81,'2017-04-21'),(82,'2017-04-24'),(83,'2017-04-25'),(84,'2017-04-26'),(85,'2017-04-27'),(86,'2017-04-28'),(87,'2017-05-02'),(88,'2017-05-03'),(89,'2017-05-04'),(90,'2017-05-05'),(91,'2017-05-08'),(92,'2017-05-09'),(93,'2017-05-10'),(94,'2017-05-11'),(95,'2017-05-12'),(96,'2017-05-15'),(97,'2017-05-16'),(98,'2017-05-17'),(99,'2017-05-18'),(100,'2017-05-19'),(101,'2017-05-22'),(102,'2017-05-23'),(103,'2017-05-24'),(104,'2017-05-25'),(105,'2017-05-26'),(106,'2017-05-29'),(107,'2017-05-30'),(108,'2017-05-31'),(109,'2017-06-01'),(110,'2017-06-02'),(111,'2017-06-05'),(112,'2017-06-06'),(113,'2017-06-07'),(114,'2017-06-08'),(115,'2017-06-09'),(116,'2017-06-12'),(117,'2017-06-13'),(118,'2017-06-14'),(119,'2017-06-15'),(120,'2017-06-16');
/*!40000 ALTER TABLE `market_sessions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'engine_has_pattern'
--
/*!50003 DROP PROCEDURE IF EXISTS `backtest_calculate_confidence` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `backtest_calculate_confidence`(
input_has_id int,
CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION int)
proc_label: BEGIN

declare var_head_close_price float;

declare var_head_row_id int;

declare var_head_neckline_price float;

declare var_second_shoulder_low_row_id int;

declare second_shoulder_low_close_price float;

declare var_head_height float;

declare var_min_price float;

declare var_max_price float;

declare var_confidence_value float default -1;


-- declare var_neckline_slope float;

select a.second_shoulder_low_row_id,a.second_shoulder_low_close_price,
a.head_row_id,a.head_close_price from  engine_has_pattern.identified_has_data a
where a.has_id = input_has_id
into
var_second_shoulder_low_row_id,second_shoulder_low_close_price,
var_head_row_id,var_head_close_price;

select a.price_value from  engine_has_pattern.has_neckline_points a
where row_id = var_head_row_id
into var_head_neckline_price;

set var_head_height = var_head_close_price - var_head_neckline_price;

select max(a.CLOSE_PRICE) from  engine_has_pattern.equity_data_has_pattern a
where a.ROW_ID >  var_second_shoulder_low_row_id
and a.ROW_ID <=  (var_second_shoulder_low_row_id +  CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION)

into var_max_price;

select min(a.CLOSE_PRICE) from  engine_has_pattern.equity_data_has_pattern a
where a.ROW_ID >  var_second_shoulder_low_row_id
and a.ROW_ID <=  (var_second_shoulder_low_row_id +  CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION)

into var_min_price;

if var_max_price > second_shoulder_low_close_price
then

if ( var_max_price - second_shoulder_low_close_price) >   (second_shoulder_low_close_price - var_min_price)

then

set var_confidence_value = 0;

replace into engine_has_pattern.backtest_has_confidence
values(input_has_id,var_confidence_value);

leave proc_label;

end if;


end if;






set var_confidence_value = (second_shoulder_low_close_price -  var_min_price) * 100/
                            var_head_height;

replace into engine_has_pattern.backtest_has_confidence
values(input_has_id,var_confidence_value);



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `backtest_identify_all_has_pattern_type` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `backtest_identify_all_has_pattern_type`(
duration_days INT)
BEGIN

  -- Declare variables used just for cursor and loop control
  DECLARE no_more_rows int;
  DECLARE loop_cntr INT DEFAULT 1;
  DECLARE num_rows INT DEFAULT 0;

  DECLARE var_has_id INT;
  DECLARE var_second_shoulder_top_row_id INT;
  DECLARE var_second_shoulder_top_close_price FLOAT;

  DECLARE calculated_cut_off_date DATE;

  DECLARE HEAD_DUR_PERC_OF_RALLY float DEFAULT 0.0;

  DECLARE CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION int DEFAULT 0;
  DECLARE var_cut_off_date_row_id int;

  DECLARE identified_pattern_type INT;





      DECLARE identified_has_details CURSOR FOR
    SELECT DISTINCT
        has_id,second_shoulder_top_row_id, second_shoulder_top_close_price
        -- ,CURR_DATE,CLOSE_PRICE
    FROM engine_has_pattern.identified_has_data
    ORDER BY has_id ASC
;

   -- Declare 'handlers' for exceptions
  DECLARE CONTINUE HANDLER FOR NOT FOUND
    SET no_more_rows = 1;

SELECT rule_value/100 FROM engine_has_pattern.has_pattern_rules
where rule_name = 'HEAD_DURATION_PERCENTAGE_OF_RALLY' into  HEAD_DUR_PERC_OF_RALLY;

SET CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION =    ROUND(2 * duration_days * HEAD_DUR_PERC_OF_RALLY );

delete from  engine_has_pattern.identified_has_pattern_type;

delete from engine_has_pattern.backtest_has_confidence;

OPEN identified_has_details;

 IF no_more_rows = 1 THEN
 close identified_has_details;
 END IF;

find_second_shoulder__low_loop : LOOP

 IF no_more_rows = 1 THEN
 LEAVE find_second_shoulder__low_loop;
 END IF;

FETCH identified_has_details INTO var_has_id,var_second_shoulder_top_row_id,
                                    var_second_shoulder_top_close_price;

 IF no_more_rows = 1 THEN
 LEAVE find_second_shoulder__low_loop;
 END IF;


select  a.curr_date from engine_has_pattern.equity_data_has_pattern a
where a.row_id =  (var_second_shoulder_top_row_id +  CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION)
into calculated_cut_off_date;

call identify_has_pattern_type(duration_days,calculated_cut_off_date,var_has_id,var_second_shoulder_top_row_id,
                                    var_second_shoulder_top_close_price,
                                    CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION
                                    );
select a.identified_pattern_type_id from engine_has_pattern.identified_has_pattern_type a
where a.has_id = var_has_id
into identified_pattern_type;

if    identified_pattern_type = 2
then

call engine_has_pattern.backtest_calculate_confidence(var_has_id,
CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION);

end if;


-- call find_second_shoulder_low(current_head_row_id,current_head_close_price,duration_days);
 IF no_more_rows = 1 THEN
 LEAVE find_second_shoulder__low_loop;
 END IF;

END LOOP find_second_shoulder__low_loop;


 close identified_has_details;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `calculate_neckline_data` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `calculate_neckline_data`(
input_has_id int,
input_first_shoulder_low_row_id int,
input_first_shoulder_low_close_price float,
input_first_shoulder_low_date date,
input_head_low_row_id int,
input_head_low_close_price float,
duration_days INT)
BEGIN


declare neckline_slope float default 0.0;

declare price_diff_percentage float default 0.0;

declare VAR_MAX_NECKLINE_SLOPE_ABS_VALUE float default 0.0;



SELECT rule_value FROM engine_has_pattern.has_pattern_rules
where rule_name = 'MAX_NECKLINE_SLOPE_ABSOLUTE_VALUE' into  VAR_MAX_NECKLINE_SLOPE_ABS_VALUE;

set  price_diff_percentage =  (input_head_low_close_price - input_first_shoulder_low_close_price) * 100
                                /  input_first_shoulder_low_close_price;

set neckline_slope =  price_diff_percentage/ (input_head_low_row_id - input_first_shoulder_low_row_id);

if abs(neckline_slope) > VAR_MAX_NECKLINE_SLOPE_ABS_VALUE then

set neckline_slope = (neckline_slope/abs(neckline_slope)) * VAR_MAX_NECKLINE_SLOPE_ABS_VALUE;  -- set neckline slope to 0.5 or -0.5

end if;

replace INTO engine_has_pattern.identified_has_neckline_data
(has_id,
first_shoulder_low_row_id,
first_shoulder_low_date,
first_shoulder_low_close_price,
neckline_slope_value)
VALUES  (
input_has_id ,
input_first_shoulder_low_row_id ,
input_first_shoulder_low_date ,
input_first_shoulder_low_close_price ,
neckline_slope
);

call calculate_neckline_points(input_has_id,input_first_shoulder_low_row_id,input_first_shoulder_low_close_price,
neckline_slope,duration_days);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `calculate_neckline_points` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `calculate_neckline_points`(
input_has_id int,
input_first_shoulder_low_row_id int,
input_first_shoulder_low_close_price float,
input_neckline_slope float,
duration_days INT)
BEGIN

declare loop_counter int default 0;

declare calculated_price_value float default 0;

declare calculated_row_id int default 0;



set loop_counter =   duration_days / 2;

plot_neckline_loop : LOOP

 IF loop_counter = 0 THEN
 LEAVE plot_neckline_loop;
 END IF;

 set calculated_row_id = loop_counter + input_first_shoulder_low_row_id;

 set calculated_price_value =  input_first_shoulder_low_close_price +
                                 ((loop_counter * input_neckline_slope) * input_first_shoulder_low_close_price/ 100);


 set calculated_price_value = (round(calculated_price_value/0.05)) * 0.05;                                

replace INTO engine_has_pattern.has_neckline_points
( select  input_has_id,calculated_row_id,a.session_date,calculated_price_value
from engine_has_pattern.market_sessions  a
where   a.ROW_ID = calculated_row_id
);



 set loop_counter = loop_counter - 1;

END LOOP plot_neckline_loop;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `data_accumulation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `data_accumulation`(symbol_in varchar(45),
startDate date,
endDate date,
duration_days INT)
BEGIN


delete from engine_has_pattern.equity_data_has_pattern;

ALTER TABLE engine_has_pattern.equity_data_has_pattern AUTO_INCREMENT =1;


INSERT INTO engine_has_pattern.equity_data_has_pattern

(select NULL,SYMBOL,
CURR_DATE,
PREV_CLOSE,
OPEN_PRICE,
HIGH_PRICE,
LOW_PRICE,
LAST_PRICE,
CLOSE_PRICE,
AVERAGE_PRICE,
TOTAL_TRADED_QUANTITY,
TURNOVER,
NO_OF_TRADES,
DELIVERABLE_QTY,
PERCENT_DELIVERABLE_QTY
 from engine_ea.equity_data_main where symbol = symbol_in
 and CURR_DATE between startDate and
 date_add(endDate, INTERVAL (duration_days/2) day)
 -- endDate
 );


delete from engine_has_pattern.market_sessions;

replace INTO engine_has_pattern.market_sessions

(select a.ROW_ID,a.CURR_DATE from engine_has_pattern.equity_data_has_pattern a);

delete from engine_has_pattern.equity_data_has_pattern  where  CURR_DATE >  endDate;

call validate_market_sessions_data(endDate,duration_days);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_first_shoulder` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_first_shoulder`(
duration_days INT)
BEGIN

  -- Declare variables used just for cursor and loop control
  DECLARE no_more_rows int;
  DECLARE num_rows INT DEFAULT 0;

  DECLARE current_close_price float DEFAULT 0;

  DECLARE previous_close_price float DEFAULT 0;

  DECLARE current_row_id int DEFAULT 0;

  DECLARE previous_row_id int DEFAULT 0;

  DECLARE current_row_date DATE;

  DECLARE previous_row_date DATE;

  DECLARE HEAD_DUR_PERC_OF_RALLY float DEFAULT 0.0;

  DECLARE CALCULATED_SHOULDER_HEAD_DURATION int DEFAULT 0;




    DECLARE has_rally_tops CURSOR FOR
    SELECT DISTINCT
        ROW_ID,CURR_DATE,CLOSE_PRICE
    FROM engine_has_pattern.equity_data_has_pattern_rally_top
    ORDER BY ROW_ID ASC
;



  -- Declare 'handlers' for exceptions
  DECLARE CONTINUE HANDLER FOR NOT FOUND
    SET no_more_rows = 1;

SELECT rule_value/100 FROM engine_has_pattern.has_pattern_rules
where rule_name = 'HEAD_DURATION_PERCENTAGE_OF_RALLY' into  HEAD_DUR_PERC_OF_RALLY;

SET CALCULATED_SHOULDER_HEAD_DURATION =   2 * ROUND(duration_days * HEAD_DUR_PERC_OF_RALLY );

delete from engine_has_pattern.has_first_shoulder_data;

OPEN has_rally_tops;

 IF no_more_rows = 1 THEN
 close has_rally_tops;
 END IF;

FETCH has_rally_tops INTO previous_row_id,previous_row_date,previous_close_price;

SELECT curr_date FROM engine_has_pattern.equity_data_has_pattern
where row_id = previous_row_id
into previous_row_date;


rally_loop : LOOP

 IF no_more_rows = 1 THEN
 LEAVE rally_loop;
 END IF;


FETCH has_rally_tops INTO current_row_id,current_row_date,current_close_price;

 IF no_more_rows = 1 THEN
 LEAVE rally_loop;
 END IF;

SELECT curr_date FROM engine_has_pattern.equity_data_has_pattern
where row_id = current_row_id
into current_row_date;

IF( current_row_id -  previous_row_id <=  CALCULATED_SHOULDER_HEAD_DURATION
and current_close_price > previous_close_price) THEN

insert into engine_has_pattern.has_first_shoulder_data
values(previous_row_id,previous_row_date,previous_close_price,null,null,null,
current_row_id,current_row_date,current_close_price,null,null,null);

call find_first_shoulder_and_head_low(previous_row_id,current_row_id,duration_days);


END IF;


 set  previous_row_id =   current_row_id;
 set  previous_row_date =   current_row_date;
 set  previous_close_price =   current_close_price;

END LOOP rally_loop;

CLOSE has_rally_tops;




END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_first_shoulder_and_head_low` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_first_shoulder_and_head_low`(
input_shoulder_top_row_id INT,
input_head_row_id INT,
duration_days INT)
BEGIN

DECLARE HEAD_DUR_PERC_OF_RALLY float DEFAULT 0.0;

DECLARE CALCULATED_RALLY_LOW_DURATION int DEFAULT 0;

DECLARE target_close_price float DEFAULT 0;


DECLARE target_row_id int DEFAULT 0;


DECLARE target_row_date date;


SELECT rule_value/100 FROM engine_has_pattern.has_pattern_rules
where rule_name = 'HEAD_DURATION_PERCENTAGE_OF_RALLY' into  HEAD_DUR_PERC_OF_RALLY;

SET CALCULATED_RALLY_LOW_DURATION =   ROUND(duration_days * HEAD_DUR_PERC_OF_RALLY );


-- update first shoulder related low point details


SELECT a.row_id, a.curr_date, a. CLOSE_PRICE FROM engine_has_pattern.equity_data_has_pattern a
WHERE a.close_price =
( SELECT min(b.close_price) FROM
engine_has_pattern.equity_data_has_pattern b
where 1=1
and b.row_id > input_shoulder_top_row_id
and b.row_id <= (input_shoulder_top_row_id + CALCULATED_RALLY_LOW_DURATION)
)
and a.row_id > input_shoulder_top_row_id
and a.row_id <= (input_shoulder_top_row_id + CALCULATED_RALLY_LOW_DURATION)

into target_row_id,target_row_date,target_close_price;

update engine_has_pattern.has_first_shoulder_data
set  first_shoulder_low_row_id = target_row_id,
first_shoulder_low_date = target_row_date,
first_shoulder_low_close_price = target_close_price
where first_shoulder_top_row_id = input_shoulder_top_row_id;


-- update head related low point details

SELECT a.row_id, a.curr_date, a. CLOSE_PRICE FROM engine_has_pattern.equity_data_has_pattern a
WHERE a.close_price =
( SELECT min(b.close_price) FROM
engine_has_pattern.equity_data_has_pattern b
where 1=1
and b.row_id > input_head_row_id
and b.row_id <= (input_head_row_id + CALCULATED_RALLY_LOW_DURATION)
)
and a.row_id > input_head_row_id
and a.row_id <= (input_head_row_id + CALCULATED_RALLY_LOW_DURATION)

into target_row_id,target_row_date,target_close_price;

update engine_has_pattern.has_first_shoulder_data
set  head_low_row_id = target_row_id,
head_low_date = target_row_date,
head_low_close_price = target_close_price
where first_shoulder_top_row_id = input_shoulder_top_row_id;







END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_has` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_has`(
symbol_in varchar(45),
duration_days INT,
startDate date,
endDate date
-- ,input_pattern_type_id int
)
BEGIN

call data_accumulation(symbol_in,startDate,endDate,duration_days);

call engine_has_pattern.find_rally_top(duration_days);

call engine_has_pattern.find_first_shoulder(duration_days);

call find_second_shoulder_for_has(symbol_in,duration_days);

-- call identify_all_has_pattern_type(duration_days,endDate);







END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_rally_top` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_rally_top`(
duration_days INT)
BEGIN

DECLARE HEAD_DUR_PERC_OF_RALLY float DEFAULT 0.0;

DECLARE CALCULATED_RALLY_TOP_DURATION int DEFAULT 0;


SELECT rule_value/100 FROM engine_has_pattern.has_pattern_rules
where rule_name = 'HEAD_DURATION_PERCENTAGE_OF_RALLY' into  HEAD_DUR_PERC_OF_RALLY;

SET CALCULATED_RALLY_TOP_DURATION =  2* ROUND(duration_days * HEAD_DUR_PERC_OF_RALLY );


delete from engine_has_pattern.equity_data_has_pattern_top_temp;

replace into engine_has_pattern.equity_data_has_pattern_top_temp(

SELECT distinct a.* FROM engine_has_pattern.equity_data_has_pattern a
where a.close_price >
(SELECT max(close_price) FROM engine_has_pattern.equity_data_has_pattern b
where DATEDIFF(a.curr_date,b.curr_date) <= duration_days
and DATEDIFF(a.curr_date,b.curr_date) > 0 )
) ;


delete from engine_has_pattern.equity_data_has_pattern_rally_top;

insert into engine_has_pattern.equity_data_has_pattern_rally_top(
SELECT distinct a.* FROM engine_has_pattern.equity_data_has_pattern_top_temp a
WHERE a.close_price >
( SELECT max(b.close_price) FROM
engine_has_pattern.equity_data_has_pattern b
where 1=1
and b.row_id - a.row_id <= CALCULATED_RALLY_TOP_DURATION
and b.row_id - a.row_id > 0
)
);


/*
insert into engine_has_pattern.equity_data_has_pattern_rally_top(
SELECT a.* FROM engine_has_pattern.equity_data_has_pattern_top_temp a
WHERE NOT EXISTS
( SELECT curr_date FROM
engine_has_pattern.equity_data_has_pattern_top_temp b
where 1=1
AND DATEDIFF(b.curr_date,a.curr_date) < duration_days
AND DATEDIFF(b.curr_date,a.curr_date) > 0
)
)
;
*/






END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_second_shoulder` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_second_shoulder`(
symbol_in varchar(45),
input_head_row_id int,
input_head_close_price float,
input_head_low_price float,
duration_days INT
)
proc_label: BEGIN




  DECLARE HEAD_DUR_PERC_OF_RALLY float DEFAULT 0.0;

  DECLARE CALCULATED_HEAD_TO_SHOULDER_DURATION int DEFAULT 0;


  DECLARE var_has_id int;
  DECLARE var_first_shoulder_low_row_id int;
  DECLARE var_first_shoulder_low_close_price float;
  DECLARE var_first_shoulder_low_date date;
   DECLARE var_head_low_row_id int;
  DECLARE var_head_low_close_price float;

    DECLARE var_second_shoulder_count float;



  -- DECLARE VAR_HEAD_ROW_ID INT DEFAULT 0;





SELECT rule_value/100 FROM engine_has_pattern.has_pattern_rules
where rule_name = 'HEAD_DURATION_PERCENTAGE_OF_RALLY' into  HEAD_DUR_PERC_OF_RALLY;

SET CALCULATED_HEAD_TO_SHOULDER_DURATION =    2 * ROUND(duration_days * HEAD_DUR_PERC_OF_RALLY );


SELECT count(*) FROM engine_has_pattern.equity_data_has_pattern a
where a.close_price =
(SELECT max(close_price) FROM engine_has_pattern.equity_data_has_pattern b
where 1=1
and b.row_id > input_head_row_id
and b.row_id <= (input_head_row_id +  CALCULATED_HEAD_TO_SHOULDER_DURATION)
)
and a.CLOSE_PRICE < input_head_close_price
and a.CLOSE_PRICE > input_head_low_price

into var_second_shoulder_count;

if(var_second_shoulder_count = 0) then

leave proc_label;

end if;



replace into engine_has_pattern.equity_data_has_second_shoulder_top(

SELECT distinct input_head_row_id,a.* FROM engine_has_pattern.equity_data_has_pattern a
where a.close_price =
(SELECT max(close_price) FROM engine_has_pattern.equity_data_has_pattern b
where 1=1
and b.row_id > input_head_row_id
and b.row_id <= (input_head_row_id +  CALCULATED_HEAD_TO_SHOULDER_DURATION)
)
and a.CLOSE_PRICE < input_head_close_price
and a.CLOSE_PRICE > input_head_low_price
)
;

replace into engine_has_pattern.identified_has_data(
select null,symbol_in, a.*,null,null,null,null,null,null from   engine_has_pattern.has_first_shoulder_data a
where a.head_row_id = input_head_row_id);

update  engine_has_pattern.identified_has_data a, engine_has_pattern.equity_data_has_second_shoulder_top b
set a.second_shoulder_top_row_id = b.ROW_ID,
a.second_shoulder_top_date = b.CURR_DATE,
a.second_shoulder_top_close_price = b.CLOSE_PRICE
where a.head_row_id = b.head_row_id;

select a.has_id,a.first_shoulder_low_row_id,a.first_shoulder_low_close_price, a.first_shoulder_low_date,
a.head_low_row_id,a.head_low_close_price from engine_has_pattern.identified_has_data a
where a.head_row_id = input_head_row_id
into  var_has_id,var_first_shoulder_low_row_id,var_first_shoulder_low_close_price, var_first_shoulder_low_date,
var_head_low_row_id,var_head_low_close_price;


call engine_has_pattern.calculate_neckline_data(var_has_id,var_first_shoulder_low_row_id,var_first_shoulder_low_close_price,
var_first_shoulder_low_date,var_head_low_row_id,var_head_low_close_price,duration_days);


-- call engine_has_pattern.identify_has_pattern_type





END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_second_shoulder_for_has` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_second_shoulder_for_has`(
symbol_in varchar(45),
duration_days INT
)
BEGIN


  -- Declare variables used just for cursor and loop control
  DECLARE no_more_rows int;
  DECLARE loop_cntr INT DEFAULT 1;
  DECLARE num_rows INT DEFAULT 0;

  DECLARE current_head_close_price float DEFAULT 0;

  DECLARE current_head_row_id int DEFAULT 0;

  DECLARE current_head_low_price float DEFAULT 0;



    DECLARE has_first_shoulder_details CURSOR FOR
    SELECT DISTINCT
        head_row_id,head_close_price,head_low_close_price
        -- ,CURR_DATE,CLOSE_PRICE
    FROM engine_has_pattern.has_first_shoulder_data
    ORDER BY head_row_id ASC
;

  -- Declare 'handlers' for exceptions
  DECLARE CONTINUE HANDLER FOR NOT FOUND
    SET no_more_rows = 1;

delete from engine_has_pattern.equity_data_has_second_shoulder_top;

if (select max(has_id) from engine_has_pattern.identified_has_data) > 10000
then
ALTER TABLE engine_has_pattern.equity_data_has_pattern AUTO_INCREMENT =1;
end if;

delete from engine_has_pattern.identified_has_data;

delete from  engine_has_pattern.has_neckline_points;
delete from  engine_has_pattern.identified_has_neckline_data;



OPEN has_first_shoulder_details;

 IF no_more_rows = 1 THEN
 close has_first_shoulder_details;
 END IF;

find_second_shoulder_loop : LOOP

 IF no_more_rows = 1 THEN
 LEAVE find_second_shoulder_loop;
 END IF;

FETCH has_first_shoulder_details INTO current_head_row_id,current_head_close_price,current_head_low_price;

 IF no_more_rows = 1 THEN
 LEAVE find_second_shoulder_loop;
 END IF;

call find_second_shoulder(symbol_in,current_head_row_id,current_head_close_price,current_head_low_price,duration_days);

-- call find_second_shoulder_low(current_head_row_id,current_head_close_price,duration_days);
 IF no_more_rows = 1 THEN
 LEAVE find_second_shoulder_loop;
 END IF;

END LOOP find_second_shoulder_loop;


close has_first_shoulder_details;





END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `identify_as_pattern_type_1_or_2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `identify_as_pattern_type_1_or_2`(
input_endDate_row_id int,
input_has_id int,
input_second_shoulder_top_row_id int,
input_second_shoulder_top_close_price float,
CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION int
)
proc_label: BEGIN


declare var_shoulder_low_min_close_price float(10,2);

declare var_shoulder_low_min_row_id int;

declare var_shoulder_low_min_row_date date;




declare var_shoulder_low_slope float(10,2);

declare var_neckline_slope float(10,2);

declare var_effective_slope float(10,2);


declare price_diff_percentage float(10,2);


declare var_shoulder_top_neckline_price float(10,2);


declare var_shoulder_height_percentage float(10,2);

declare identified_as_type_2 boolean;






select min(CLOSE_PRICE) from engine_has_pattern.equity_data_has_pattern
where ROW_ID >  input_second_shoulder_top_row_id
and ROW_ID <=    input_endDate_row_id
into var_shoulder_low_min_close_price;

call identify_as_pattern_type_2(input_has_id,input_endDate_row_id, var_shoulder_low_min_close_price,
input_second_shoulder_top_row_id,identified_as_type_2);

if identified_as_type_2 = true
then

leave proc_label;

end if;


-- identify if pattern type 1 --


select ROW_ID,CURR_DATE from engine_has_pattern.equity_data_has_pattern
where ROW_ID >  input_second_shoulder_top_row_id
and ROW_ID <=    input_endDate_row_id
and FORMAT(CLOSE_PRICE,2)  = FORMAT(var_shoulder_low_min_close_price,2)
order by  ROW_ID desc
limit 1
into var_shoulder_low_min_row_id,var_shoulder_low_min_row_date;

select a.price_value from engine_has_pattern.has_neckline_points a
where a.has_id = input_has_id
and a.row_id = input_second_shoulder_top_row_id
into var_shoulder_top_neckline_price;

set  price_diff_percentage =  (var_shoulder_low_min_close_price - input_second_shoulder_top_close_price) * 100
                                /  input_second_shoulder_top_close_price;

set var_shoulder_low_slope =  price_diff_percentage/ (var_shoulder_low_min_row_id - input_second_shoulder_top_row_id);

select a.neckline_slope_value from engine_has_pattern.identified_has_neckline_data a
where a.has_id = input_has_id
into var_neckline_slope;

set var_effective_slope = var_shoulder_low_slope - var_neckline_slope;



set var_shoulder_height_percentage = (input_second_shoulder_top_close_price - var_shoulder_top_neckline_price) * 100/

                                                    input_second_shoulder_top_close_price;


if ((var_effective_slope * CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION)   + var_shoulder_height_percentage)  < 0

then

replace into engine_has_pattern.identified_has_pattern_type values(input_has_id,1);

update engine_has_pattern.identified_has_data a
set  second_shoulder_low_row_id = var_shoulder_low_min_row_id,
second_shoulder_low_date =  var_shoulder_low_min_row_date,
second_shoulder_low_close_price = var_shoulder_low_min_close_price
where has_id = input_has_id;

end if;







END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `identify_as_pattern_type_2` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `identify_as_pattern_type_2`(
input_has_id int,
input_endDate_row_id int,
input_shoulder_low_min_close_price float,
input_second_shoulder_top_row_id int,
out output_identified boolean
)
BEGIN

declare var_current_close_price float(10,2);

declare var_current_date date;

declare var_current_row_id int;



  -- Declare variables used just for cursor and loop control
  DECLARE no_more_rows int;
  DECLARE loop_cntr INT DEFAULT 1;
  DECLARE num_rows INT DEFAULT 0;

      DECLARE identified_neckline_points CURSOR FOR
    SELECT DISTINCT
           row_id,curr_date,price_value
        -- ,CURR_DATE,CLOSE_PRICE
    FROM engine_has_pattern.has_neckline_points a
    where   has_id = input_has_id
    and row_id > input_second_shoulder_top_row_id
    and row_id <= input_endDate_row_id
    ORDER BY curr_date ASC
;


  -- Declare 'handlers' for exceptions
  DECLARE CONTINUE HANDLER FOR NOT FOUND
    SET no_more_rows = 1;



OPEN identified_neckline_points;

 IF no_more_rows = 1 THEN
 close identified_neckline_points;
 END IF;

identified_neckline_points_loop : LOOP

 IF no_more_rows = 1 THEN
 LEAVE identified_neckline_points_loop;
 END IF;

FETCH identified_neckline_points INTO var_current_row_id,var_current_date,var_current_close_price;

 IF no_more_rows = 1 THEN
 LEAVE identified_neckline_points_loop;
 END IF;


 if (input_shoulder_low_min_close_price <=  var_current_close_price)
 then

 select a.curr_date from engine_has_pattern.has_neckline_points a
 where a.row_id = var_current_row_id
 into var_current_date;

replace into engine_has_pattern.identified_has_pattern_type values(input_has_id,2);

set output_identified = true;

update engine_has_pattern.identified_has_data a
set  second_shoulder_low_row_id = var_current_row_id,
second_shoulder_low_date =  var_current_date,
second_shoulder_low_close_price = input_shoulder_low_min_close_price
where has_id = input_has_id;


end if;
 IF no_more_rows = 1 THEN
 LEAVE identified_neckline_points_loop;
 END IF;

END LOOP identified_neckline_points_loop;


 close identified_neckline_points;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `identify_has_pattern_type` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `identify_has_pattern_type`(
duration_days INT,
cut_off_date date,
input_has_id int,
input_second_shoulder_top_row_id int,
input_second_shoulder_top_close_price float,
CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION int
)
proc_label: BEGIN

declare var_cut_off_date_row_id int;

select a.ROW_ID from engine_has_pattern.equity_data_has_pattern a
where a.CURR_DATE = cut_off_date into var_cut_off_date_row_id;

IF ((var_cut_off_date_row_id -  input_second_shoulder_top_row_id  = 0) AND duration_days <= 30)
THEN

replace into engine_has_pattern.identified_has_pattern_type values(var_has_id,1);

LEAVE proc_label;


END IF;


IF (var_cut_off_date_row_id -  input_second_shoulder_top_row_id <   (0.2 * CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION))
THEN

LEAVE proc_label;

END IF;

IF (var_cut_off_date_row_id -  input_second_shoulder_top_row_id <=   CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION)
THEN


call identify_as_pattern_type_1_or_2(var_cut_off_date_row_id,input_has_id,input_second_shoulder_top_row_id,
input_second_shoulder_top_close_price,
CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION);

LEAVE proc_label;

-- calculate(

END IF;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `validate_market_sessions_data` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_market_sessions_data`(
endDate date,
duration_days INT)
proc_label: BEGIN

declare max_session_date date;

declare target_session_date date;


declare max_session_date_sr_no int;

declare end_date_sr_no int;

declare max_session_date_row_id int;

declare loop_counter int;





select max(a.session_date) from engine_has_pattern.market_sessions a  into max_session_date;

set target_session_date =  date_add(endDate, INTERVAL (duration_days/2) day);

if max_session_date  < target_session_date
then

select max(a.row_id) from engine_has_pattern.market_sessions a  into max_session_date_row_id;


select a.SR_NO from engine_ea.market_sessions a
where a.SESSION_DATE =  max_session_date
into max_session_date_sr_no;

if (max_session_date_sr_no is null) then

leave proc_label;

end if;

set end_date_sr_no =  max_session_date_sr_no + round(5 * datediff(target_session_date,max_session_date)/7);

set loop_counter = 1;


fill_market_sessions : LOOP

 IF loop_counter > (end_date_sr_no - max_session_date_sr_no) THEN
 LEAVE fill_market_sessions;
 END IF;

replace INTO engine_has_pattern.market_sessions

(select (max_session_date_row_id + loop_counter),a.SESSION_DATE from engine_ea.market_sessions a
where a.SR_NO = (max_session_date_sr_no  + loop_counter)
)
;


 set loop_counter = loop_counter + 1;

 end  loop fill_market_sessions;


end if;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Current Database: `prediction_has_pattern`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `prediction_has_pattern` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `prediction_has_pattern`;

--
-- Table structure for table `backtest_has_confidence`
--

DROP TABLE IF EXISTS `backtest_has_confidence`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `backtest_has_confidence` (
  `has_evaluation_run_id` int(11) NOT NULL,
  `has_id` int(11) NOT NULL,
  `confidence_value` float DEFAULT NULL,
  PRIMARY KEY (`has_evaluation_run_id`,`has_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `backtest_has_confidence`
--

LOCK TABLES `backtest_has_confidence` WRITE;
/*!40000 ALTER TABLE `backtest_has_confidence` DISABLE KEYS */;
/*!40000 ALTER TABLE `backtest_has_confidence` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_evaluation_run`
--

DROP TABLE IF EXISTS `has_evaluation_run`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_evaluation_run` (
  `has_evaluation_run_id` int(11) NOT NULL AUTO_INCREMENT,
  `symbol` varchar(45) DEFAULT NULL,
  `curr_date` date DEFAULT NULL,
  `duration_days` int(11) DEFAULT NULL,
  PRIMARY KEY (`has_evaluation_run_id`)
) ENGINE=InnoDB AUTO_INCREMENT=888 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_evaluation_run`
--

LOCK TABLES `has_evaluation_run` WRITE;
/*!40000 ALTER TABLE `has_evaluation_run` DISABLE KEYS */;
INSERT INTO `has_evaluation_run` VALUES (420,'ADANIPORTS','2017-06-16',30),(421,'ADANIPORTS','2017-06-16',45),(422,'ADANIPORTS','2017-06-16',60),(423,'AUROPHARMA','2017-06-16',30),(424,'AUROPHARMA','2017-06-16',45),(425,'AUROPHARMA','2017-06-16',60),(426,'AXISBANK','2017-06-16',30),(427,'AXISBANK','2017-06-16',45),(428,'AXISBANK','2017-06-16',60),(429,'BEML','2017-06-16',30),(430,'BEML','2017-06-16',45),(431,'BEML','2017-06-16',60),(432,'BHARATFIN','2017-06-16',30),(433,'BHARATFIN','2017-06-16',45),(434,'BHARATFIN','2017-06-16',60),(435,'BPCL','2017-06-16',30),(436,'BPCL','2017-06-16',45),(437,'BPCL','2017-06-16',60),(438,'DLF','2017-06-16',30),(439,'DLF','2017-06-16',45),(440,'DLF','2017-06-16',60),(441,'FEDERALBNK','2017-06-16',30),(442,'FEDERALBNK','2017-06-16',45),(443,'FEDERALBNK','2017-06-16',60),(444,'HDFC','2017-06-16',30),(445,'HDFC','2017-06-16',45),(446,'HDFC','2017-06-16',60),(447,'HDFCBANK','2017-06-16',30),(448,'HDFCBANK','2017-06-16',45),(449,'HDFCBANK','2017-06-16',60),(450,'HDIL','2017-06-16',30),(451,'HDIL','2017-06-16',45),(452,'HDIL','2017-06-16',60),(453,'HINDPETRO','2017-06-16',30),(454,'HINDPETRO','2017-06-16',45),(455,'HINDPETRO','2017-06-16',60),(456,'IBREALEST','2017-06-16',30),(457,'IBREALEST','2017-06-16',45),(458,'IBREALEST','2017-06-16',60),(459,'IBULHSGFIN','2017-06-16',30),(460,'IBULHSGFIN','2017-06-16',45),(461,'IBULHSGFIN','2017-06-16',60),(462,'ICICIBANK','2017-06-16',30),(463,'ICICIBANK','2017-06-16',45),(464,'ICICIBANK','2017-06-16',60),(465,'INDIACEM','2017-06-16',30),(466,'INDIACEM','2017-06-16',45),(467,'INDIACEM','2017-06-16',60),(468,'INFY','2017-06-16',30),(469,'INFY','2017-06-16',45),(470,'INFY','2017-06-16',60),(471,'IOC','2017-06-16',30),(472,'IOC','2017-06-16',45),(473,'IOC','2017-06-16',60),(474,'IPCALAB','2017-06-16',30),(475,'IPCALAB','2017-06-16',45),(476,'IPCALAB','2017-06-16',60),(477,'ITC','2017-06-16',30),(478,'ITC','2017-06-16',45),(479,'ITC','2017-06-16',60),(480,'LUPIN','2017-06-16',30),(481,'LUPIN','2017-06-16',45),(482,'LUPIN','2017-06-16',60),(483,'MARUTI','2017-06-16',30),(484,'MARUTI','2017-06-16',45),(485,'MARUTI','2017-06-16',60),(486,'RELIANCE','2017-06-16',30),(487,'RELIANCE','2017-06-16',45),(488,'RELIANCE','2017-06-16',60),(489,'SBIN','2017-06-16',30),(490,'SBIN','2017-06-16',45),(491,'SBIN','2017-06-16',60),(492,'YESBANK','2017-06-16',30),(493,'YESBANK','2017-06-16',45),(494,'YESBANK','2017-06-16',60),(495,'YESBANK','2017-06-16',30),(496,'YESBANK','2017-06-16',45),(497,'YESBANK','2017-06-16',60),(498,'ADANIPORTS','2017-06-12',30),(499,'ADANIPORTS','2017-06-12',45),(500,'ADANIPORTS','2017-06-12',60),(501,'AUROPHARMA','2017-06-12',30),(502,'AUROPHARMA','2017-06-12',45),(503,'AUROPHARMA','2017-06-12',60),(504,'AXISBANK','2017-06-12',30),(505,'AXISBANK','2017-06-12',45),(506,'AXISBANK','2017-06-12',60),(507,'BEML','2017-06-12',30),(508,'BEML','2017-06-12',45),(509,'BEML','2017-06-12',60),(510,'BHARATFIN','2017-06-12',30),(511,'BHARATFIN','2017-06-12',45),(512,'BHARATFIN','2017-06-12',60),(513,'BPCL','2017-06-12',30),(514,'BPCL','2017-06-12',45),(515,'BPCL','2017-06-12',60),(516,'DLF','2017-06-12',30),(517,'DLF','2017-06-12',45),(518,'DLF','2017-06-12',60),(519,'FEDERALBNK','2017-06-12',30),(520,'FEDERALBNK','2017-06-12',45),(521,'FEDERALBNK','2017-06-12',60),(522,'HDFC','2017-06-12',30),(523,'HDFC','2017-06-12',45),(524,'HDFC','2017-06-12',60),(525,'HDFCBANK','2017-06-12',30),(526,'HDFCBANK','2017-06-12',45),(527,'HDFCBANK','2017-06-12',60),(528,'HDIL','2017-06-12',30),(529,'HDIL','2017-06-12',45),(530,'HDIL','2017-06-12',60),(531,'HINDPETRO','2017-06-12',30),(532,'HINDPETRO','2017-06-12',45),(533,'HINDPETRO','2017-06-12',60),(534,'IBREALEST','2017-06-12',30),(535,'IBREALEST','2017-06-12',45),(536,'IBREALEST','2017-06-12',60),(537,'IBULHSGFIN','2017-06-12',30),(538,'IBULHSGFIN','2017-06-12',45),(539,'IBULHSGFIN','2017-06-12',60),(540,'ICICIBANK','2017-06-12',30),(541,'ICICIBANK','2017-06-12',45),(542,'ICICIBANK','2017-06-12',60),(543,'INDIACEM','2017-06-12',30),(544,'INDIACEM','2017-06-12',45),(545,'INDIACEM','2017-06-12',60),(546,'INFY','2017-06-12',30),(547,'INFY','2017-06-12',45),(548,'INFY','2017-06-12',60),(549,'IOC','2017-06-12',30),(550,'IOC','2017-06-12',45),(551,'IOC','2017-06-12',60),(552,'IPCALAB','2017-06-12',30),(553,'IPCALAB','2017-06-12',45),(554,'IPCALAB','2017-06-12',60),(555,'ITC','2017-06-12',30),(556,'ITC','2017-06-12',45),(557,'ITC','2017-06-12',60),(558,'LUPIN','2017-06-12',30),(559,'LUPIN','2017-06-12',45),(560,'LUPIN','2017-06-12',60),(561,'MARUTI','2017-06-12',30),(562,'MARUTI','2017-06-12',45),(563,'MARUTI','2017-06-12',60),(564,'RELIANCE','2017-06-12',30),(565,'RELIANCE','2017-06-12',45),(566,'RELIANCE','2017-06-12',60),(567,'SBIN','2017-06-12',30),(568,'SBIN','2017-06-12',45),(569,'SBIN','2017-06-12',60),(570,'YESBANK','2017-06-12',30),(571,'YESBANK','2017-06-12',45),(572,'YESBANK','2017-06-12',60),(573,'YESBANK','2017-06-12',30),(574,'YESBANK','2017-06-12',45),(575,'YESBANK','2017-06-12',60),(576,'ADANIPORTS','2017-06-06',30),(577,'ADANIPORTS','2017-06-06',45),(578,'ADANIPORTS','2017-06-06',60),(579,'AUROPHARMA','2017-06-06',30),(580,'AUROPHARMA','2017-06-06',45),(581,'AUROPHARMA','2017-06-06',60),(582,'AXISBANK','2017-06-06',30),(583,'AXISBANK','2017-06-06',45),(584,'AXISBANK','2017-06-06',60),(585,'BEML','2017-06-06',30),(586,'BEML','2017-06-06',45),(587,'BEML','2017-06-06',60),(588,'BHARATFIN','2017-06-06',30),(589,'BHARATFIN','2017-06-06',45),(590,'BHARATFIN','2017-06-06',60),(591,'BPCL','2017-06-06',30),(592,'BPCL','2017-06-06',45),(593,'BPCL','2017-06-06',60),(594,'DLF','2017-06-06',30),(595,'DLF','2017-06-06',45),(596,'DLF','2017-06-06',60),(597,'FEDERALBNK','2017-06-06',30),(598,'FEDERALBNK','2017-06-06',45),(599,'FEDERALBNK','2017-06-06',60),(600,'HDFC','2017-06-06',30),(601,'HDFC','2017-06-06',45),(602,'HDFC','2017-06-06',60),(603,'HDFCBANK','2017-06-06',30),(604,'HDFCBANK','2017-06-06',45),(605,'HDFCBANK','2017-06-06',60),(606,'HDIL','2017-06-06',30),(607,'HDIL','2017-06-06',45),(608,'HDIL','2017-06-06',60),(609,'HINDPETRO','2017-06-06',30),(610,'HINDPETRO','2017-06-06',45),(611,'HINDPETRO','2017-06-06',60),(612,'IBREALEST','2017-06-06',30),(613,'IBREALEST','2017-06-06',45),(614,'IBREALEST','2017-06-06',60),(615,'IBULHSGFIN','2017-06-06',30),(616,'IBULHSGFIN','2017-06-06',45),(617,'IBULHSGFIN','2017-06-06',60),(618,'ICICIBANK','2017-06-06',30),(619,'ICICIBANK','2017-06-06',45),(620,'ICICIBANK','2017-06-06',60),(621,'INDIACEM','2017-06-06',30),(622,'INDIACEM','2017-06-06',45),(623,'INDIACEM','2017-06-06',60),(624,'INFY','2017-06-06',30),(625,'INFY','2017-06-06',45),(626,'INFY','2017-06-06',60),(627,'IOC','2017-06-06',30),(628,'IOC','2017-06-06',45),(629,'IOC','2017-06-06',60),(630,'IPCALAB','2017-06-06',30),(631,'IPCALAB','2017-06-06',45),(632,'IPCALAB','2017-06-06',60),(633,'ITC','2017-06-06',30),(634,'ITC','2017-06-06',45),(635,'ITC','2017-06-06',60),(636,'LUPIN','2017-06-06',30),(637,'LUPIN','2017-06-06',45),(638,'LUPIN','2017-06-06',60),(639,'MARUTI','2017-06-06',30),(640,'MARUTI','2017-06-06',45),(641,'MARUTI','2017-06-06',60),(642,'RELIANCE','2017-06-06',30),(643,'RELIANCE','2017-06-06',45),(644,'RELIANCE','2017-06-06',60),(645,'SBIN','2017-06-06',30),(646,'SBIN','2017-06-06',45),(647,'SBIN','2017-06-06',60),(648,'YESBANK','2017-06-06',30),(649,'YESBANK','2017-06-06',45),(650,'YESBANK','2017-06-06',60),(651,'YESBANK','2017-06-06',30),(652,'YESBANK','2017-06-06',45),(653,'YESBANK','2017-06-06',60),(654,'ADANIPORTS','2017-05-31',30),(655,'ADANIPORTS','2017-05-31',45),(656,'ADANIPORTS','2017-05-31',60),(657,'AUROPHARMA','2017-05-31',30),(658,'AUROPHARMA','2017-05-31',45),(659,'AUROPHARMA','2017-05-31',60),(660,'AXISBANK','2017-05-31',30),(661,'AXISBANK','2017-05-31',45),(662,'AXISBANK','2017-05-31',60),(663,'BEML','2017-05-31',30),(664,'BEML','2017-05-31',45),(665,'BEML','2017-05-31',60),(666,'BHARATFIN','2017-05-31',30),(667,'BHARATFIN','2017-05-31',45),(668,'BHARATFIN','2017-05-31',60),(669,'BPCL','2017-05-31',30),(670,'BPCL','2017-05-31',45),(671,'BPCL','2017-05-31',60),(672,'DLF','2017-05-31',30),(673,'DLF','2017-05-31',45),(674,'DLF','2017-05-31',60),(675,'FEDERALBNK','2017-05-31',30),(676,'FEDERALBNK','2017-05-31',45),(677,'FEDERALBNK','2017-05-31',60),(678,'HDFC','2017-05-31',30),(679,'HDFC','2017-05-31',45),(680,'HDFC','2017-05-31',60),(681,'HDFCBANK','2017-05-31',30),(682,'HDFCBANK','2017-05-31',45),(683,'HDFCBANK','2017-05-31',60),(684,'HDIL','2017-05-31',30),(685,'HDIL','2017-05-31',45),(686,'HDIL','2017-05-31',60),(687,'HINDPETRO','2017-05-31',30),(688,'HINDPETRO','2017-05-31',45),(689,'HINDPETRO','2017-05-31',60),(690,'IBREALEST','2017-05-31',30),(691,'IBREALEST','2017-05-31',45),(692,'IBREALEST','2017-05-31',60),(693,'IBULHSGFIN','2017-05-31',30),(694,'IBULHSGFIN','2017-05-31',45),(695,'IBULHSGFIN','2017-05-31',60),(696,'ICICIBANK','2017-05-31',30),(697,'ICICIBANK','2017-05-31',45),(698,'ICICIBANK','2017-05-31',60),(699,'INDIACEM','2017-05-31',30),(700,'INDIACEM','2017-05-31',45),(701,'INDIACEM','2017-05-31',60),(702,'INFY','2017-05-31',30),(703,'INFY','2017-05-31',45),(704,'INFY','2017-05-31',60),(705,'IOC','2017-05-31',30),(706,'IOC','2017-05-31',45),(707,'IOC','2017-05-31',60),(708,'IPCALAB','2017-05-31',30),(709,'IPCALAB','2017-05-31',45),(710,'IPCALAB','2017-05-31',60),(711,'ITC','2017-05-31',30),(712,'ITC','2017-05-31',45),(713,'ITC','2017-05-31',60),(714,'LUPIN','2017-05-31',30),(715,'LUPIN','2017-05-31',45),(716,'LUPIN','2017-05-31',60),(717,'MARUTI','2017-05-31',30),(718,'MARUTI','2017-05-31',45),(719,'MARUTI','2017-05-31',60),(720,'RELIANCE','2017-05-31',30),(721,'RELIANCE','2017-05-31',45),(722,'RELIANCE','2017-05-31',60),(723,'SBIN','2017-05-31',30),(724,'SBIN','2017-05-31',45),(725,'SBIN','2017-05-31',60),(726,'YESBANK','2017-05-31',30),(727,'YESBANK','2017-05-31',45),(728,'YESBANK','2017-05-31',60),(729,'YESBANK','2017-05-31',30),(730,'YESBANK','2017-05-31',45),(731,'YESBANK','2017-05-31',60),(732,'ADANIPORTS','2017-05-25',30),(733,'ADANIPORTS','2017-05-25',45),(734,'ADANIPORTS','2017-05-25',60),(735,'AUROPHARMA','2017-05-25',30),(736,'AUROPHARMA','2017-05-25',45),(737,'AUROPHARMA','2017-05-25',60),(738,'AXISBANK','2017-05-25',30),(739,'AXISBANK','2017-05-25',45),(740,'AXISBANK','2017-05-25',60),(741,'BEML','2017-05-25',30),(742,'BEML','2017-05-25',45),(743,'BEML','2017-05-25',60),(744,'BHARATFIN','2017-05-25',30),(745,'BHARATFIN','2017-05-25',45),(746,'BHARATFIN','2017-05-25',60),(747,'BPCL','2017-05-25',30),(748,'BPCL','2017-05-25',45),(749,'BPCL','2017-05-25',60),(750,'DLF','2017-05-25',30),(751,'DLF','2017-05-25',45),(752,'DLF','2017-05-25',60),(753,'FEDERALBNK','2017-05-25',30),(754,'FEDERALBNK','2017-05-25',45),(755,'FEDERALBNK','2017-05-25',60),(756,'HDFC','2017-05-25',30),(757,'HDFC','2017-05-25',45),(758,'HDFC','2017-05-25',60),(759,'HDFCBANK','2017-05-25',30),(760,'HDFCBANK','2017-05-25',45),(761,'HDFCBANK','2017-05-25',60),(762,'HDIL','2017-05-25',30),(763,'HDIL','2017-05-25',45),(764,'HDIL','2017-05-25',60),(765,'HINDPETRO','2017-05-25',30),(766,'HINDPETRO','2017-05-25',45),(767,'HINDPETRO','2017-05-25',60),(768,'IBREALEST','2017-05-25',30),(769,'IBREALEST','2017-05-25',45),(770,'IBREALEST','2017-05-25',60),(771,'IBULHSGFIN','2017-05-25',30),(772,'IBULHSGFIN','2017-05-25',45),(773,'IBULHSGFIN','2017-05-25',60),(774,'ICICIBANK','2017-05-25',30),(775,'ICICIBANK','2017-05-25',45),(776,'ICICIBANK','2017-05-25',60),(777,'INDIACEM','2017-05-25',30),(778,'INDIACEM','2017-05-25',45),(779,'INDIACEM','2017-05-25',60),(780,'INFY','2017-05-25',30),(781,'INFY','2017-05-25',45),(782,'INFY','2017-05-25',60),(783,'IOC','2017-05-25',30),(784,'IOC','2017-05-25',45),(785,'IOC','2017-05-25',60),(786,'IPCALAB','2017-05-25',30),(787,'IPCALAB','2017-05-25',45),(788,'IPCALAB','2017-05-25',60),(789,'ITC','2017-05-25',30),(790,'ITC','2017-05-25',45),(791,'ITC','2017-05-25',60),(792,'LUPIN','2017-05-25',30),(793,'LUPIN','2017-05-25',45),(794,'LUPIN','2017-05-25',60),(795,'MARUTI','2017-05-25',30),(796,'MARUTI','2017-05-25',45),(797,'MARUTI','2017-05-25',60),(798,'RELIANCE','2017-05-25',30),(799,'RELIANCE','2017-05-25',45),(800,'RELIANCE','2017-05-25',60),(801,'SBIN','2017-05-25',30),(802,'SBIN','2017-05-25',45),(803,'SBIN','2017-05-25',60),(804,'YESBANK','2017-05-25',30),(805,'YESBANK','2017-05-25',45),(806,'YESBANK','2017-05-25',60),(807,'YESBANK','2017-05-25',30),(808,'YESBANK','2017-05-25',45),(809,'YESBANK','2017-05-25',60),(810,'ADANIPORTS','2017-05-22',30),(811,'ADANIPORTS','2017-05-22',45),(812,'ADANIPORTS','2017-05-22',60),(813,'AUROPHARMA','2017-05-22',30),(814,'AUROPHARMA','2017-05-22',45),(815,'AUROPHARMA','2017-05-22',60),(816,'AXISBANK','2017-05-22',30),(817,'AXISBANK','2017-05-22',45),(818,'AXISBANK','2017-05-22',60),(819,'BEML','2017-05-22',30),(820,'BEML','2017-05-22',45),(821,'BEML','2017-05-22',60),(822,'BHARATFIN','2017-05-22',30),(823,'BHARATFIN','2017-05-22',45),(824,'BHARATFIN','2017-05-22',60),(825,'BPCL','2017-05-22',30),(826,'BPCL','2017-05-22',45),(827,'BPCL','2017-05-22',60),(828,'DLF','2017-05-22',30),(829,'DLF','2017-05-22',45),(830,'DLF','2017-05-22',60),(831,'FEDERALBNK','2017-05-22',30),(832,'FEDERALBNK','2017-05-22',45),(833,'FEDERALBNK','2017-05-22',60),(834,'HDFC','2017-05-22',30),(835,'HDFC','2017-05-22',45),(836,'HDFC','2017-05-22',60),(837,'HDFCBANK','2017-05-22',30),(838,'HDFCBANK','2017-05-22',45),(839,'HDFCBANK','2017-05-22',60),(840,'HDIL','2017-05-22',30),(841,'HDIL','2017-05-22',45),(842,'HDIL','2017-05-22',60),(843,'HINDPETRO','2017-05-22',30),(844,'HINDPETRO','2017-05-22',45),(845,'HINDPETRO','2017-05-22',60),(846,'IBREALEST','2017-05-22',30),(847,'IBREALEST','2017-05-22',45),(848,'IBREALEST','2017-05-22',60),(849,'IBULHSGFIN','2017-05-22',30),(850,'IBULHSGFIN','2017-05-22',45),(851,'IBULHSGFIN','2017-05-22',60),(852,'ICICIBANK','2017-05-22',30),(853,'ICICIBANK','2017-05-22',45),(854,'ICICIBANK','2017-05-22',60),(855,'INDIACEM','2017-05-22',30),(856,'INDIACEM','2017-05-22',45),(857,'INDIACEM','2017-05-22',60),(858,'INFY','2017-05-22',30),(859,'INFY','2017-05-22',45),(860,'INFY','2017-05-22',60),(861,'IOC','2017-05-22',30),(862,'IOC','2017-05-22',45),(863,'IOC','2017-05-22',60),(864,'IPCALAB','2017-05-22',30),(865,'IPCALAB','2017-05-22',45),(866,'IPCALAB','2017-05-22',60),(867,'ITC','2017-05-22',30),(868,'ITC','2017-05-22',45),(869,'ITC','2017-05-22',60),(870,'LUPIN','2017-05-22',30),(871,'LUPIN','2017-05-22',45),(872,'LUPIN','2017-05-22',60),(873,'MARUTI','2017-05-22',30),(874,'MARUTI','2017-05-22',45),(875,'MARUTI','2017-05-22',60),(876,'RELIANCE','2017-05-22',30),(877,'RELIANCE','2017-05-22',45),(878,'RELIANCE','2017-05-22',60),(879,'SBIN','2017-05-22',30),(880,'SBIN','2017-05-22',45),(881,'SBIN','2017-05-22',60),(882,'YESBANK','2017-05-22',30),(883,'YESBANK','2017-05-22',45),(884,'YESBANK','2017-05-22',60),(885,'YESBANK','2017-05-22',30),(886,'YESBANK','2017-05-22',45),(887,'YESBANK','2017-05-22',60);
/*!40000 ALTER TABLE `has_evaluation_run` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_neckline_points`
--

DROP TABLE IF EXISTS `has_neckline_points`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_neckline_points` (
  `has_evaluation_run_id` int(11) NOT NULL,
  `has_id` int(11) NOT NULL,
  `row_id` int(11) NOT NULL,
  `curr_date` date DEFAULT NULL,
  `price_value` float(10,2) DEFAULT NULL,
  PRIMARY KEY (`has_evaluation_run_id`,`has_id`,`row_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_neckline_points`
--

LOCK TABLES `has_neckline_points` WRITE;
/*!40000 ALTER TABLE `has_neckline_points` DISABLE KEYS */;
/*!40000 ALTER TABLE `has_neckline_points` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `has_prediction_rules`
--

DROP TABLE IF EXISTS `has_prediction_rules`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `has_prediction_rules` (
  `rule_id` int(11) NOT NULL,
  `rule_name` varchar(45) DEFAULT NULL,
  `rule_value` float NOT NULL,
  `rule_desc` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`rule_id`),
  UNIQUE KEY `rule_name_UNIQUE` (`rule_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `has_prediction_rules`
--

LOCK TABLES `has_prediction_rules` WRITE;
/*!40000 ALTER TABLE `has_prediction_rules` DISABLE KEYS */;
INSERT INTO `has_prediction_rules` VALUES (1,'TARGET_HAS_DURATION_FACTOR',2.5,'TARGET_HAS_DURATION_FACTOR'),(2,'BACKTESTING_DURATION_IN_YEARS',3,'BACKTESTING_DURATION_IN_YEARS');
/*!40000 ALTER TABLE `has_prediction_rules` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identified_has_data`
--

DROP TABLE IF EXISTS `identified_has_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identified_has_data` (
  `has_evaluation_run_id` int(5) NOT NULL,
  `has_id` int(5) NOT NULL,
  `symbol` varchar(45) NOT NULL,
  `first_shoulder_top_row_id` int(5) NOT NULL,
  `first_shoulder_top_date` date DEFAULT NULL,
  `first_shoulder_top_close_price` float DEFAULT NULL,
  `first_shoulder_low_row_id` int(5) DEFAULT NULL,
  `first_shoulder_low_date` date DEFAULT NULL,
  `first_shoulder_low_close_price` float DEFAULT NULL,
  `head_row_id` int(5) DEFAULT NULL,
  `head_date` date DEFAULT NULL,
  `head_close_price` float DEFAULT NULL,
  `head_low_row_id` int(5) DEFAULT NULL,
  `head_low_date` date DEFAULT NULL,
  `head_low_close_price` float DEFAULT NULL,
  `second_shoulder_top_row_id` int(5) DEFAULT NULL,
  `second_shoulder_top_date` date DEFAULT NULL,
  `second_shoulder_top_close_price` float DEFAULT NULL,
  `second_shoulder_low_row_id` int(5) DEFAULT NULL,
  `second_shoulder_low_date` date DEFAULT NULL,
  `second_shoulder_low_close_price` float DEFAULT NULL,
  PRIMARY KEY (`has_evaluation_run_id`,`has_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identified_has_data`
--

LOCK TABLES `identified_has_data` WRITE;
/*!40000 ALTER TABLE `identified_has_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `identified_has_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identified_has_data_for_backtest`
--

DROP TABLE IF EXISTS `identified_has_data_for_backtest`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identified_has_data_for_backtest` (
  `has_evaluation_run_id` int(5) NOT NULL,
  `has_id` int(5) NOT NULL,
  `symbol` varchar(45) NOT NULL,
  `first_shoulder_top_row_id` int(5) NOT NULL,
  `first_shoulder_top_date` date DEFAULT NULL,
  `first_shoulder_top_close_price` float DEFAULT NULL,
  `first_shoulder_low_row_id` int(5) DEFAULT NULL,
  `first_shoulder_low_date` date DEFAULT NULL,
  `first_shoulder_low_close_price` float DEFAULT NULL,
  `head_row_id` int(5) DEFAULT NULL,
  `head_date` date DEFAULT NULL,
  `head_close_price` float DEFAULT NULL,
  `head_low_row_id` int(5) DEFAULT NULL,
  `head_low_date` date DEFAULT NULL,
  `head_low_close_price` float DEFAULT NULL,
  `second_shoulder_top_row_id` int(5) DEFAULT NULL,
  `second_shoulder_top_date` date DEFAULT NULL,
  `second_shoulder_top_close_price` float DEFAULT NULL,
  `second_shoulder_low_row_id` int(5) DEFAULT NULL,
  `second_shoulder_low_date` date DEFAULT NULL,
  `second_shoulder_low_close_price` float DEFAULT NULL,
  PRIMARY KEY (`has_evaluation_run_id`,`has_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identified_has_data_for_backtest`
--

LOCK TABLES `identified_has_data_for_backtest` WRITE;
/*!40000 ALTER TABLE `identified_has_data_for_backtest` DISABLE KEYS */;
/*!40000 ALTER TABLE `identified_has_data_for_backtest` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identified_has_neckline_data`
--

DROP TABLE IF EXISTS `identified_has_neckline_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identified_has_neckline_data` (
  `has_evaluation_run_id` int(11) NOT NULL,
  `has_id` int(5) NOT NULL,
  `first_shoulder_low_row_id` int(5) DEFAULT NULL,
  `first_shoulder_low_date` date DEFAULT NULL,
  `first_shoulder_low_close_price` float DEFAULT NULL,
  `neckline_slope_value` float DEFAULT NULL,
  PRIMARY KEY (`has_evaluation_run_id`,`has_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identified_has_neckline_data`
--

LOCK TABLES `identified_has_neckline_data` WRITE;
/*!40000 ALTER TABLE `identified_has_neckline_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `identified_has_neckline_data` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `identified_has_pattern_type`
--

DROP TABLE IF EXISTS `identified_has_pattern_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `identified_has_pattern_type` (
  `has_evaluation_run_id` int(11) NOT NULL,
  `has_id` int(11) NOT NULL,
  `identified_pattern_type_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`has_evaluation_run_id`,`has_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `identified_has_pattern_type`
--

LOCK TABLES `identified_has_pattern_type` WRITE;
/*!40000 ALTER TABLE `identified_has_pattern_type` DISABLE KEYS */;
INSERT INTO `identified_has_pattern_type` VALUES (45,132,2),(46,135,2);
/*!40000 ALTER TABLE `identified_has_pattern_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `prediction_type`
--

DROP TABLE IF EXISTS `prediction_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `prediction_type` (
  `type_id` int(11) NOT NULL,
  `type_name` varchar(45) DEFAULT NULL,
  `type_desc` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `prediction_type`
--

LOCK TABLES `prediction_type` WRITE;
/*!40000 ALTER TABLE `prediction_type` DISABLE KEYS */;
INSERT INTO `prediction_type` VALUES (1,'current_time','Identify the pattern for current time frame. Not required to analyse wether the pattern was successful. Only needed output is support/resistance types for future dates based on neckline'),(2,'back_testing','Identify the pattern for past dates. Also analyse wether the pattern was successful based upon neckline and volume data.');
/*!40000 ALTER TABLE `prediction_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'prediction_has_pattern'
--
/*!50003 DROP PROCEDURE IF EXISTS `CLEAN_DB_DATA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `CLEAN_DB_DATA`()
BEGIN


DELETE FROM `prediction_has_pattern`.`backtest_has_confidence`;

DELETE FROM `prediction_has_pattern`.`has_evaluation_run`;

DELETE FROM `prediction_has_pattern`.`has_neckline_points`;

DELETE FROM `prediction_has_pattern`.`identified_has_data`;

DELETE FROM `prediction_has_pattern`.`identified_has_data_for_backtest`;

DELETE FROM `prediction_has_pattern`.`identified_has_neckline_data`;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_has_main` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_has_main`(
symbol_in varchar(45),
duration_days INT,
endDate date)
BEGIN

  DECLARE var_evaluation_run_id int;

  DECLARE var_identified_pattern_type_id int;

  DECLARE VAR_TARGET_HAS_DURATION_FACTOR float DEFAULT 0;

  DECLARE VAR_BACKTESTING_DURATION_IN_YEARS float DEFAULT 0;




SELECT rule_value FROM prediction_has_pattern.has_prediction_rules
where rule_name = 'TARGET_HAS_DURATION_FACTOR' into  VAR_TARGET_HAS_DURATION_FACTOR;

SELECT rule_value FROM prediction_has_pattern.has_prediction_rules
where rule_name = 'BACKTESTING_DURATION_IN_YEARS' into  VAR_BACKTESTING_DURATION_IN_YEARS;

  SET @startDate = DATE_SUB(endDate,INTERVAL (VAR_TARGET_HAS_DURATION_FACTOR*duration_days) day) ;

INSERT INTO prediction_has_pattern.has_evaluation_run
values (null,symbol_in,endDate,duration_days);


select max(a.has_evaluation_run_id) from prediction_has_pattern.has_evaluation_run a
into var_evaluation_run_id;

call prediction_has_pattern.find_target_has(symbol_in,duration_days,@startDate,endDate,var_evaluation_run_id,
                                            var_identified_pattern_type_id);

if var_identified_pattern_type_id = 2
then


-- start backtesting back from already covered period

call prediction_has_pattern.has_backtesting(symbol_in ,
duration_days,
@startDate,
var_evaluation_run_id,
VAR_BACKTESTING_DURATION_IN_YEARS);

end if;


-- replace INTO prediction_has_pattern.identified_has_pattern_type





END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `find_target_has` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `find_target_has`(
symbol_in varchar(45),
duration_days INT,
startDate date,
endDate date,
input_evaluation_run_id int,
out var_identified_pattern_type_id int
)
BEGIN

  DECLARE var_has_id INT;
  DECLARE var_second_shoulder_top_row_id INT;
  DECLARE var_second_shoulder_top_date DATE;
  DECLARE var_second_shoulder_top_close_price FLOAT;

  DECLARE HEAD_DUR_PERC_OF_RALLY float DEFAULT 0.0;

  DECLARE CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION int DEFAULT 0;


  DECLARE identified_has_data_count int;




caLL engine_has_pattern.find_has (symbol_in,duration_days,
                                  startDate, endDate);

select count(*) from engine_has_pattern.identified_has_data into identified_has_data_count;

if (identified_has_data_count >= 1)   then

SELECT rule_value/100 FROM engine_has_pattern.has_pattern_rules
where rule_name = 'HEAD_DURATION_PERCENTAGE_OF_RALLY' into  HEAD_DUR_PERC_OF_RALLY;


SET CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION =    ROUND(2 * duration_days * HEAD_DUR_PERC_OF_RALLY );

delete from  engine_has_pattern.identified_has_pattern_type;

select a.has_id,a.second_shoulder_top_row_id,a.second_shoulder_top_date,
a.second_shoulder_top_close_price from  engine_has_pattern.identified_has_data a
where a.second_shoulder_top_date =
(select max(second_shoulder_top_date) from   engine_has_pattern.identified_has_data)

INTO var_has_id,var_second_shoulder_top_row_id,
                                    var_second_shoulder_top_date,var_second_shoulder_top_close_price;

-- repeat replace to update second shoulder low details ---
 
replace INTO prediction_has_pattern.identified_has_data
(select input_evaluation_run_id,a.* from engine_has_pattern.identified_has_data a
where a.has_id = var_has_id);


call engine_has_pattern.identify_has_pattern_type(duration_days,endDate,var_has_id,var_second_shoulder_top_row_id,
                                    var_second_shoulder_top_close_price,
                                    CALCULATED_SECOND_SHOULDER_TO_LOW_DURATION);

select a.identified_pattern_type_id from  engine_has_pattern.identified_has_pattern_type a

where a.has_id = var_has_id

into var_identified_pattern_type_id;

if   var_identified_pattern_type_id is not null
then

replace INTO prediction_has_pattern.identified_has_data
(select input_evaluation_run_id,a.* from engine_has_pattern.identified_has_data a
where a.has_id = var_has_id);

replace INTO prediction_has_pattern.identified_has_pattern_type
(select input_evaluation_run_id,a.* from engine_has_pattern.identified_has_pattern_type a
where a.has_id = var_has_id);


replace INTO prediction_has_pattern.identified_has_neckline_data
(select input_evaluation_run_id,a.* from engine_has_pattern.identified_has_neckline_data a
where a.has_id = var_has_id);


replace INTO prediction_has_pattern.has_neckline_points
(select input_evaluation_run_id,a.* from engine_has_pattern.has_neckline_points a
where a.has_id = var_has_id);

end if;

end if;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `has_backtesting` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `has_backtesting`(
symbol_in varchar(45),
duration_days INT,
endDate date,
input_evaluation_run_id int,
VAR_BACKTESTING_DURATION_IN_YEARS float
)
BEGIN


SET @startDate = DATE_SUB(endDate,INTERVAL VAR_BACKTESTING_DURATION_IN_YEARS year) ;
caLL engine_has_pattern.find_has (symbol_in,duration_days,
                                  @startDate, endDate);

call engine_has_pattern.backtest_identify_all_has_pattern_type(duration_days);

replace into prediction_has_pattern.backtest_has_confidence
(select  input_evaluation_run_id,a.*  from
engine_has_pattern.backtest_has_confidence a);

replace into prediction_has_pattern.identified_has_data_for_backtest
(select  input_evaluation_run_id,a.*  from
engine_has_pattern.identified_has_data a);



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `prediction_for_symbol` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `prediction_for_symbol`(
symbol_in varchar(45),
endDate date
)
BEGIN 

call prediction_has_pattern.find_has_main(symbol_in,30,endDate);

call prediction_has_pattern.find_has_main(symbol_in,45,endDate);

call prediction_has_pattern.find_has_main(symbol_in,60,endDate);



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `prediction_has_main` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `prediction_has_main`(
targetDate date)
BEGIN


  -- Declare variables used just for cursor and loop control
  DECLARE no_more_rows int;
  DECLARE loop_cntr INT DEFAULT 1;
  DECLARE num_rows INT DEFAULT 0;

  DECLARE var_symbol VARCHAR(45);



    DECLARE has_top25_details CURSOR FOR
    SELECT DISTINCT
        symbol
        -- ,CURR_DATE,CLOSE_PRICE
    FROM engine_ea.top_25_equity;


  -- Declare 'handlers' for exceptions
  DECLARE CONTINUE HANDLER FOR NOT FOUND
    SET no_more_rows = 1;

-- call   prediction_has_pattern.CLEAN_DB_DATA();

open  has_top25_details;


has_top25_loop : LOOP

 IF no_more_rows = 1 THEN
 LEAVE has_top25_loop;
 END IF;

FETCH has_top25_details INTO var_symbol;

CALL prediction_has_pattern.prediction_for_symbol(var_symbol,targetDate);

 IF no_more_rows = 1 THEN
 LEAVE has_top25_loop;
 END IF;


 end loop has_top25_loop;


 close  has_top25_details;







END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `prediction_has_main_ka_baap` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `prediction_has_main_ka_baap`()
BEGIN

call   prediction_has_pattern.CLEAN_DB_DATA();


call prediction_has_main('2017-06-16');

call prediction_has_main('2017-06-12');

call prediction_has_main('2017-06-06');

call prediction_has_main('2017-05-31');

call prediction_has_main('2017-05-25');

call prediction_has_main('2017-05-22');


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-06-17 19:08:21
